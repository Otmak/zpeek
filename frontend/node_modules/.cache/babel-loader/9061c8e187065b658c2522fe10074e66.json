{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/othome/Desktop/projects/zonar/zpeek/src/components/asset-content/mani/tablet/tablet.js\";\nimport React, { Component } from 'react';\nimport Chip from '@material-ui/core/Chip';\nimport DoneIcon from '@material-ui/icons/Done';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography'; // const useStyles = makeStyles((theme) => ({\n//   root: {\n//     width: '100%',\n//     maxWidth: 360,\n//     backgroundColor: theme.palette.background.paper,\n//   },\n//   section1: {\n//     margin: theme.spacing(3, 2),\n//   },\n//   section2: {\n//     margin: theme.spacing(2),\n//   },\n//   section3: {\n//     margin: theme.spacing(3, 1, 1),\n//   },\n// }));\n// const style = {\n//   width: 360,\n//   maxWidth: '360px',\n// }\n// const actualDiv = ()=>{\n// \treturn (\n// \t\t    <div >\n// \t      <div className=''>\n// \t        <Grid container alignItems=\"center\">\n// \t          <Grid item xs>\n// \t            <Typography gutterBottom variant=\"h6\">\n// \t              Toothbrush\n// \t            </Typography>\n// \t          </Grid>\n// \t          <Grid item>\n// \t            <Typography gutterBottom variant=\"h6\">\n// \t              $4.50\n// \t            </Typography>\n// \t          </Grid>\n// \t        </Grid>\n// \t        <Typography color=\"textSecondary\" variant=\"body2\">\n// \t          Pinstriped cornflower blue cotton blouse or just down the\n// \t          hall.\n// \t        </Typography>\n// \t      </div>\n// \t      <Divider variant=\"middle\" />\n// \t      <div className=''>\n// \t        <Typography gutterBottom variant=\"body1\">\n// \t          somth random info\n// \t        </Typography>\n// \t        <div> Apps : \n// \t          <Chip className='' label=\"Extra Soft\" />\n// \t          <Chip className='' color=\"primary\" label=\"Soft\" />\n// \t          <Chip className='' label=\"Medium\" />\n// \t          <Chip className=''label=\"Hard\" />\n// \t        </div>\n// \t      </div>\n// \t      <div className=''>\n// \t        <Button onClick={()=> this.fetchManiData()} color=\"primary\">Get Mani</Button>\n// \t      </div>\n// \t    </div>\n// \t    )}\n\nexport default class Tablet extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: this.props.data,\n      tabletMani: [],\n      gettingMani: true\n    };\n  }\n\n  componentDidMount() {\n    this.fetchManiData();\n  }\n\n  hoverAction() {\n    console.log('hover');\n  }\n\n  async fetchManiData() {\n    console.log('fetching MANI'); // const { assetInfo : { id=null, gps=null }} = this.state\n\n    const {\n      data: {\n        id = null,\n        gpsid = null\n      }\n    } = this.state;\n\n    if (gpsid === null) {\n      console.log('This asset has no GPSID');\n      this.setState({\n        gettingMani: false\n      });\n    } else {\n      let bodyData = {\n        'params': {\n          'id': id,\n          'gpsid': gpsid\n        }\n      };\n      const makeRequest = await fetch('/mani', {\n        method: 'POST',\n        body: JSON.stringify(bodyData),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log('End', makeRequest);\n      const getManiData = await makeRequest.json(); // console.log(getManiData)\n\n      if (makeRequest.status === 200) {\n        if (getManiData.error) {\n          console.log('Error in server bud');\n          this.setState({\n            maniexists: false\n          });\n        } else {\n          if (getManiData) {\n            this.setState({\n              tabletMani: getManiData.maniresponse\n            });\n            console.log(getManiData);\n          } else {\n            // this.setState({pathexists : false})\n            console.log('Error AFTER 200 status on fetch');\n          }\n        }\n      } else {\n        this.setSate({\n          gettingMani: false\n        });\n      }\n    }\n\n    return 'Done';\n  }\n\n  validateData() {\n    const {\n      tabletMani: {\n        assetInfo,\n        packageManifest\n      },\n      gettingMani\n    } = this.state;\n    console.log('from tablet', packageManifest);\n    console.log('LOODING..', gettingMani);\n\n    if (packageManifest === undefined) {\n      console.log('Getting MANI?', gettingMani);\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" No Mani \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 8\n      }, this);\n    } else {\n      const som = '';\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Here is your Mani \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 7\n      }, this);\n    }\n  }\n\n  render() {\n    // const {assetInfo, packageManifest} = this.state.tabletMani\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.validateData()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 3\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/othome/Desktop/projects/zonar/zpeek/src/components/asset-content/mani/tablet/tablet.js"],"names":["React","Component","Chip","DoneIcon","Button","Grid","Divider","Typography","Tablet","constructor","props","state","data","tabletMani","gettingMani","componentDidMount","fetchManiData","hoverAction","console","log","id","gpsid","setState","bodyData","makeRequest","fetch","method","body","JSON","stringify","headers","getManiData","json","status","error","maniexists","maniresponse","setSate","validateData","assetInfo","packageManifest","undefined","som","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Chip from '@material-ui/core/Chip';\nimport DoneIcon from '@material-ui/icons/Done';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\n\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     width: '100%',\n//     maxWidth: 360,\n//     backgroundColor: theme.palette.background.paper,\n//   },\n//   section1: {\n//     margin: theme.spacing(3, 2),\n//   },\n//   section2: {\n//     margin: theme.spacing(2),\n//   },\n//   section3: {\n//     margin: theme.spacing(3, 1, 1),\n//   },\n// }));\n// const style = {\n//   width: 360,\n//   maxWidth: '360px',\n// }\n\n// const actualDiv = ()=>{\n// \treturn (\n// \t\t    <div >\n// \t      <div className=''>\n// \t        <Grid container alignItems=\"center\">\n// \t          <Grid item xs>\n// \t            <Typography gutterBottom variant=\"h6\">\n// \t              Toothbrush\n// \t            </Typography>\n// \t          </Grid>\n// \t          <Grid item>\n// \t            <Typography gutterBottom variant=\"h6\">\n// \t              $4.50\n// \t            </Typography>\n// \t          </Grid>\n// \t        </Grid>\n// \t        <Typography color=\"textSecondary\" variant=\"body2\">\n// \t          Pinstriped cornflower blue cotton blouse or just down the\n// \t          hall.\n// \t        </Typography>\n// \t      </div>\n// \t      <Divider variant=\"middle\" />\n// \t      <div className=''>\n// \t        <Typography gutterBottom variant=\"body1\">\n// \t          somth random info\n// \t        </Typography>\n// \t        <div> Apps : \n// \t          <Chip className='' label=\"Extra Soft\" />\n// \t          <Chip className='' color=\"primary\" label=\"Soft\" />\n// \t          <Chip className='' label=\"Medium\" />\n// \t          <Chip className=''label=\"Hard\" />\n\n\n// \t        </div>\n// \t      </div>\n// \t      <div className=''>\n// \t        <Button onClick={()=> this.fetchManiData()} color=\"primary\">Get Mani</Button>\n// \t      </div>\n// \t    </div>\n// \t    )}\n\nexport default class Tablet extends Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      data : this.props.data,\n      tabletMani : [],\n      gettingMani : true\n    }\n  }\n\n  componentDidMount(){\n  \tthis.fetchManiData()\n  }\n\n\n  hoverAction(){\n  \tconsole.log('hover')\n  }\n\n\n  async fetchManiData() {\n\n\tconsole.log('fetching MANI')\n\t// const { assetInfo : { id=null, gps=null }} = this.state\n\tconst { data : { id=null, gpsid=null }} = this.state\n\n\n\tif (gpsid === null){\n\t\tconsole.log('This asset has no GPSID')\n\t\tthis.setState({gettingMani: false})\n\t}else{\n\t\tlet bodyData = {\n\t\t'params': {\n\t\t\t'id': id,\n\t\t\t'gpsid': gpsid\n\t\t\t}}\n\t\tconst makeRequest = await fetch('/mani', {\n\t        method: 'POST',\n\t        body: JSON.stringify(bodyData),\n\t        headers: {'Content-Type': 'application/json'}\n\t    })\n\t    console.log('End',makeRequest)\n\t\tconst getManiData = await makeRequest.json()\n\t\t// console.log(getManiData)\n\n\n\t\tif (makeRequest.status === 200) {\n\t\t\tif (getManiData.error) {\n\t\t\t\tconsole.log('Error in server bud')\n\t\t\t\tthis.setState({maniexists : false})\n\t\t\t}else{\n\t\t\t\tif (getManiData) {\n\t\t\t\t\tthis.setState({tabletMani : getManiData.maniresponse})\n\t\t\t\t\tconsole.log(getManiData)\n\t\t\t\t}else{\n\t\t\t\t\t// this.setState({pathexists : false})\n\t\t\t\t\tconsole.log('Error AFTER 200 status on fetch')\n\t\t\t\t}\n\t\t\t}\n\t\t}else{\n\t\t\tthis.setSate({gettingMani: false})\n\t\t}\n\t}\n\n\treturn 'Done'\n\t}\n\n\n\tvalidateData (){\n\n  \t\tconst {tabletMani : {assetInfo, packageManifest}, gettingMani} = this.state\n  \t\tconsole.log('from tablet',packageManifest)\n  \t\tconsole.log('LOODING..', gettingMani)\n  \t\tif (packageManifest === undefined) {\n  \t\t\tconsole.log('Getting MANI?', gettingMani)\n  \t\t\treturn (\n  \t\t\t\t\t<p> No Mani </p>\n  \t\t\t\t)\n  \t\t}else{\n  \t\t\tconst som = ''\n  \t\t\treturn (\n  \t\t\t\t<p> Here is your Mani </p>\n  \t\t\t\t)\n  \t\t}\n\n  \t}\n\n  render(){\n  \t// const {assetInfo, packageManifest} = this.state.tabletMani\n\n\n  \t\n\treturn (\n\t\t<div>\n\t\t\t{this.validateData()}\n\t\t</div>\n\t  );\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}