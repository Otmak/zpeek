{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/othome/Desktop/projects/zonar/zpeek/src/components/tabs/tabpanel.js\";\nimport React from 'react'; // import PropTypes from 'prop-types';\n// import { makeStyles } from '@material-ui/core/styles';\n\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nexport default function TabPanel(props) {\n  // const { children, value, index, ...other } = props;\n  // const data = props\n  Object.entries(props.assets).map(([k, v]) => console.log(v)); //   role=\"tabpanel\"\n  // hidden={value !== index}\n  // id={`vertical-tabpanel-${index}`}\n  // aria-labelledby={`vertical-tab-${index}`}\n  // {...other}\n  //       {value === index && (\n  //   <Box p={3}>\n  //     <Typography>{children}</Typography>\n  //   </Box>\n  // )}\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 7\n  }, this);\n}\n_c = TabPanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"TabPanel\");","map":{"version":3,"sources":["/Users/othome/Desktop/projects/zonar/zpeek/src/components/tabs/tabpanel.js"],"names":["React","Typography","Box","TabPanel","props","Object","entries","assets","map","k","v","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACtC;AACA;AACAC,EAAAA,MAAM,CAACC,OAAP,CAAeF,KAAK,CAACG,MAArB,EAA6BC,GAA7B,CAAiC,CAAC,CAACC,CAAD,EAAIC,CAAJ,CAAD,KAAYC,OAAO,CAACC,GAAR,CAAYF,CAAZ,CAA7C,EAHsC,CAKlC;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;;AAEJ,sBACI;AAAA;AAAA;AAAA;AAAA,UADJ;AAID;KAtBuBP,Q","sourcesContent":["import React from 'react';\n// import PropTypes from 'prop-types';\n// import { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nexport default function TabPanel(props) {\n  // const { children, value, index, ...other } = props;\n  // const data = props\n  Object.entries(props.assets).map(([k, v]) => console.log(v) )\n\n      //   role=\"tabpanel\"\n      // hidden={value !== index}\n      // id={`vertical-tabpanel-${index}`}\n      // aria-labelledby={`vertical-tab-${index}`}\n      // {...other}\n\n\n      //       {value === index && (\n      //   <Box p={3}>\n      //     <Typography>{children}</Typography>\n      //   </Box>\n      // )}\n\n  return (\n      <div></div>\n \n  );\n}\n"]},"metadata":{},"sourceType":"module"}