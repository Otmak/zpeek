{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/othome/Desktop/projects/zonar/zpeek/src/components/tabs/VerticalTabs.js\";\nimport React, { Component } from 'react';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport './tabs.css';\nimport List from '@material-ui/core/List';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport Divider from '@material-ui/core/Divider';\nimport TabSkeleton from '../skeletons/tabSkeleton';\nimport TextField from '@material-ui/core/TextField';\nimport AssetContainer from '../asset-content/asset-container';\n\nclass TabComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.filterAssetList = e => {\n      return this.setState({\n        searchFeild: e.target.value\n      });\n    };\n\n    this.state = {\n      assetList: this.props,\n      searchFeild: '',\n      loading: true,\n      active: false\n    };\n  } // isLoading(arr, l){\n  //   }\n\n\n  componentDidMount() {\n    this.setState({\n      loading: false\n    });\n  }\n\n  parseNTimes(n, elem) {\n    const elemArr = [];\n    console.log(elem);\n\n    for (let i = 0; i < n; i++) {\n      // elem.key = i\n      elemArr.push(elem);\n    }\n\n    return elemArr;\n  } // activeOnlyList(){\n  //   if (this.state.active)\n  // }\n\n\n  render() {\n    const {\n      searchFeild,\n      loading\n    } = this.state;\n    const assetList = this.props.data;\n    const activeAssetsList = assetList.filter(asset => asset.status == '1');\n    const lowercaseSearchFilter = searchFeild.toLowerCase();\n    const filteredData = assetList.filter(item => {\n      return Object.keys(item).some(key => item['assetNumber'].toLowerCase().includes(lowercaseSearchFilter));\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tabs-container\",\n      children: /*#__PURE__*/_jsxDEV(Tabs, {\n        children: [/*#__PURE__*/_jsxDEV(TabList, {\n          className: \"tabItem-container\",\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            onChange: this.filterAssetList,\n            className: \"search-textfield\",\n            id: \"filled-search\",\n            label: \"Search\",\n            type: \"search\",\n            variant: \"filled\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), assetList.length < 1 && this.parseNTimes(10, /*#__PURE__*/_jsxDEV(TabSkeleton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 56\n          }, this)), filteredData.map(i => /*#__PURE__*/_jsxDEV(Tab, {\n            children: /*#__PURE__*/_jsxDEV(List, {\n              className: \"tabItem\",\n              children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    className: i.status == '1' ? 'active-assetList-avatar' : 'inactive-assetList-avatar',\n                    children: i.status == '1' ? 'a' : 'i'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: i.assetNumber,\n                  secondary: i.type\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                component: \"li\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 19\n            }, this)\n          }, i.key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), filteredData.map(i => /*#__PURE__*/_jsxDEV(TabPanel, {\n          className: \"tab-panel\",\n          children: /*#__PURE__*/_jsxDEV(AssetContainer, {\n            assetData: {\n              'asset': i.assetNumber,\n              'id': i.key,\n              'status': i.status,\n              'gpsid': i.gpsid\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 19\n          }, this)\n        }, i.key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default TabComponent;","map":{"version":3,"sources":["/Users/othome/Desktop/projects/zonar/zpeek/src/components/tabs/VerticalTabs.js"],"names":["React","Component","Tab","Tabs","TabList","TabPanel","List","Toolbar","ListItem","ListItemAvatar","ListItemText","Avatar","Divider","TabSkeleton","TextField","AssetContainer","TabComponent","constructor","props","filterAssetList","e","setState","searchFeild","target","value","state","assetList","loading","active","componentDidMount","parseNTimes","n","elem","elemArr","console","log","i","push","render","data","activeAssetsList","filter","asset","status","lowercaseSearchFilter","toLowerCase","filteredData","item","Object","keys","some","key","includes","length","map","assetNumber","type","gpsid"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport './tabs.css'\nimport List from '@material-ui/core/List';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport Divider from '@material-ui/core/Divider';\nimport TabSkeleton from '../skeletons/tabSkeleton';\nimport TextField from '@material-ui/core/TextField';\nimport AssetContainer from '../asset-content/asset-container';\n\nclass TabComponent extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      assetList : this.props,\n      searchFeild : '',\n      loading : true,\n      active : false\n    }\n  }\n  // isLoading(arr, l){\n  //   }\n\n  componentDidMount(){\n    this.setState({loading : false})\n\n  }\n\n  filterAssetList = (e) => {\n    return this.setState({ searchFeild: e.target.value})\n\n  }\n\n  parseNTimes(n, elem) {\n    const elemArr = []\n    console.log(elem)\n    for ( let i = 0; i < n; i++) {\n      // elem.key = i\n      elemArr.push(elem)\n      }\n      return elemArr\n  }\n\n  // activeOnlyList(){\n  //   if (this.state.active)\n  // }\n\n  render(){\n    const { searchFeild, loading } = this.state;\n    const assetList = this.props.data\n    const activeAssetsList = assetList.filter( asset=> asset.status == '1')\n    const lowercaseSearchFilter = searchFeild.toLowerCase();\n    const filteredData = assetList.filter(item => {\n      return Object.keys(item).some(key =>\n        item['assetNumber'].toLowerCase().includes(lowercaseSearchFilter)\n      );\n    })\n\n    return (\n      <div className='tabs-container'>\n\n        <Tabs>\n          <TabList className='tabItem-container'>\n\n            <TextField onChange={ this.filterAssetList } className='search-textfield' id=\"filled-search\" label=\"Search\" type=\"search\" variant=\"filled\" />\n          {assetList.length <1 && this.parseNTimes(10 ,<TabSkeleton/>)}\n            { \n              filteredData.map( i=> \n                <Tab key={i.key}>\n                  <List className='tabItem'>\n                    <ListItem>\n                      <ListItemAvatar>\n                        <Avatar className={ i.status == '1' ? 'active-assetList-avatar' : 'inactive-assetList-avatar'}>\n                          {i.status == '1'? 'a' : 'i'}\n                        </Avatar>\n                      </ListItemAvatar>\n                      <ListItemText primary={i.assetNumber} secondary={i.type} />\n                    </ListItem>\n                  <Divider component=\"li\" />\n                  </List>\n                </Tab>  \n            )}\n\n          </TabList>\n            { \n              filteredData.map( i=> \n                <TabPanel key={i.key} className='tab-panel'>\n                  <AssetContainer  assetData={{'asset': i.assetNumber, 'id': i.key, 'status': i.status, 'gpsid': i.gpsid}\n                  }/>\n                </TabPanel> )\n            }\n        </Tabs>\n      </div>\n    )\n\n  }\n\n}\n\nexport default TabComponent;\n\n\n\n"]},"metadata":{},"sourceType":"module"}