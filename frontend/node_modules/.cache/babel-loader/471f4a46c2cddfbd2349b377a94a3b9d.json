{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/othome/Desktop/projects/zonar/zpeek/src/components/tabs/VerticalTabs.js\";\nimport React, { Component } from 'react';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport './tabs.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport BeachAccessIcon from '@material-ui/icons/BeachAccess';\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\nimport CardWithAction from '../card/card-with-action';\nimport TabSkeleton from '../skeletons/tabSkeleton';\nimport TextField from '@material-ui/core/TextField';\n\nclass TabComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.filterAssetList = e => {\n      console.log(e.target.value, this);\n      console.log(e.target.value, this);\n      return this.setState({\n        searchFeild: e.target.value\n      });\n    };\n\n    this.state = {\n      assetList: this.props,\n      searchFeild: '',\n      loading: true\n    };\n  }\n\n  isLoading(arr, l) {}\n\n  componentDidMount() {\n    this.setState({\n      loading: false\n    }); // console.log('MOUNT:',this.state)\n    // fetch('/assets')\n    // .then(res=> res.json() )\n    // .then(data => this.setState({ assetList: data }) )\n  }\n\n  parseNTimes(n, elem) {\n    const elemArr = [];\n\n    for (let i = 0; i < n; i++) {\n      console.log(elem.key);\n      elemArr.push(elem);\n    }\n\n    return elemArr;\n  }\n\n  render() {\n    const {\n      searchFeild,\n      loading\n    } = this.state;\n    const assetList = this.props.data;\n    const activeAssetsList = assetList.filter(asset => asset.status == '1');\n    const lowercaseSearchFilter = searchFeild.toLowerCase();\n    const filteredData = assetList.filter(item => {\n      return Object.keys(item).some(key => item[key].toLowerCase().includes(lowercaseSearchFilter));\n    }); // console.log(filteredData)\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Tabs, {\n        children: [/*#__PURE__*/_jsxDEV(TabList, {\n          className: \"tabItem-container\",\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            onChange: this.filterAssetList,\n            className: \"search-textfield\",\n            id: \"filled-search\",\n            label: \"Search\",\n            type: \"search\",\n            variant: \"filled\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 11\n          }, this), assetList.length < 1 && this.parseNTimes(1, /*#__PURE__*/_jsxDEV(TabSkeleton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 54\n          }, this)), filteredData.map(i => /*#__PURE__*/_jsxDEV(Tab, {\n            children: /*#__PURE__*/_jsxDEV(List, {\n              className: \"tabItem\",\n              children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    className: i.status == '1' ? 'active-assetList-avatar' : 'inactive-assetList-avatar',\n                    children: i.status == '1' ? 'a' : 'i'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: i.assetNumber,\n                  secondary: i.type\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                component: \"li\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 19\n            }, this)\n          }, i.key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), filteredData.map(i => /*#__PURE__*/_jsxDEV(TabPanel, {\n          className: \"tab-panel\",\n          children: /*#__PURE__*/_jsxDEV(CardWithAction, {\n            assetData: {\n              'asset': i.assetNumber,\n              'id': i.key,\n              'status': i.status,\n              'gpsid': i.gpsid\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 19\n          }, this)\n        }, i.key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default TabComponent;","map":{"version":3,"sources":["/Users/othome/Desktop/projects/zonar/zpeek/src/components/tabs/VerticalTabs.js"],"names":["React","Component","Tab","Tabs","TabList","TabPanel","makeStyles","List","ListItem","ListItemAvatar","ListItemText","Avatar","BeachAccessIcon","Divider","Typography","CardWithAction","TabSkeleton","TextField","TabComponent","constructor","props","filterAssetList","e","console","log","target","value","setState","searchFeild","state","assetList","loading","isLoading","arr","l","componentDidMount","parseNTimes","n","elem","elemArr","i","key","push","render","data","activeAssetsList","filter","asset","status","lowercaseSearchFilter","toLowerCase","filteredData","item","Object","keys","some","includes","length","map","assetNumber","type","gpsid"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport './tabs.css'\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport BeachAccessIcon from '@material-ui/icons/BeachAccess';\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\nimport CardWithAction from '../card/card-with-action';\nimport TabSkeleton from '../skeletons/tabSkeleton';\nimport TextField from '@material-ui/core/TextField';\n\nclass TabComponent extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      assetList : this.props,\n      searchFeild : '',\n      loading : true\n    }\n  }\n  isLoading(arr, l){\n\n    }\n\n  componentDidMount(){\n    this.setState({loading : false})\n    // console.log('MOUNT:',this.state)\n    // fetch('/assets')\n    // .then(res=> res.json() )\n    // .then(data => this.setState({ assetList: data }) )\n\n  }\n\n  filterAssetList = (e) => {\n    console.log(e.target.value, this)\n    console.log(e.target.value, this)\n    return this.setState({ searchFeild: e.target.value})\n\n  }\n\n  parseNTimes(n, elem) {\n    const elemArr = []\n    for (let i = 0; i < n; i++) {\n      console.log(elem.key)\n      elemArr.push(elem)\n      }\n      return elemArr\n  }\n\n\n  render(){\n    const { searchFeild, loading } = this.state;\n    const assetList = this.props.data\n    const activeAssetsList = assetList.filter( asset=> asset.status == '1')\n    const lowercaseSearchFilter = searchFeild.toLowerCase();\n    const filteredData = assetList.filter(item => {\n      return Object.keys(item).some(key =>\n        item[key].toLowerCase().includes(lowercaseSearchFilter)\n      );\n    })\n    // console.log(filteredData)\n\n    return (\n      <div>\n        <Tabs>\n          <TabList className='tabItem-container'>\n          <TextField onChange={ this.filterAssetList } className='search-textfield' id=\"filled-search\" label=\"Search\" type=\"search\" variant=\"filled\" />\n          {assetList.length <1 && this.parseNTimes(1,<TabSkeleton/>)}\n         \n            { \n              filteredData.map( i=> \n                <Tab key={i.key}>\n                  <List className='tabItem'>\n                    <ListItem>\n                      <ListItemAvatar>\n                        <Avatar className={ i.status == '1' ? 'active-assetList-avatar' : 'inactive-assetList-avatar'}>\n                          {i.status == '1'? 'a' : 'i'}\n                        </Avatar>\n                      </ListItemAvatar>\n                      <ListItemText primary={i.assetNumber} secondary={i.type} />\n                    </ListItem>\n                  <Divider component=\"li\" />\n                  </List>\n                </Tab>  \n            )}\n\n          </TabList>\n            { \n              filteredData.map( i=> \n                <TabPanel key={i.key} className='tab-panel'>\n                  <CardWithAction  assetData={{\n                                                      'asset': i.assetNumber,\n                                                      'id': i.key,\n                                                      'status': i.status,\n                                                      'gpsid': i.gpsid}\n                  }/>\n                </TabPanel> )\n            }\n        </Tabs>\n      </div>\n    )\n\n  }\n\n}\n\nexport default TabComponent;\n\n\n\n"]},"metadata":{},"sourceType":"module"}