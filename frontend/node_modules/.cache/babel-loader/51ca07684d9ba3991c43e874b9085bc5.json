{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/othome/Desktop/projects/zonar/zpeek/src/components/asset-content/path.js\";\nimport React, { Component } from 'react';\n\nclass Path extends Component {\n  constructor(props) {\n    super(props);\n    this.fetchPathData = this.fetchPathData.bind(this);\n    this.state = {\n      data: this.props\n    };\n  }\n\n  componentDidMount() {}\n\n  async fetchPathData(params) {\n    let start = 1603971032;\n    let end = 1608230858;\n    let dbId = params;\n    console.log('PARAMS WORKING! :', params); // const options = {\n    // \t\t\t\tmethod : 'POST',\n    // \t\t\t\theaders: {\n    // \t\t\t\t\t'Content-Type': 'application/json'\n    // \t      // 'Content-Type': 'application/x-www-form-urlencoded',\n    // \t   \t\t\t\t },\n    // \t\t\t\tbody : {\n    // \t\t\t\t\t'params': { \n    // \t\t\t\t\t\t'stime': start,\n    // \t\t\t\t\t\t'etime': end,\n    // \t\t\t\t\t\t'dbId' : dbId}\n    // \t\t\t\t\t}\n    // \t\t\t}\n\n    const makeRequest = await fetch('/path', {\n      method: 'POST',\n      body: JSON.stringify({\n        'item': jdata\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const getPathData = await fetch('/path'); // console.log(getPathData)\n\n    const d = await getPathData.json(); // .then(d=>console.log(d))\n\n    console.log(d);\n    return 'Done';\n  }\n\n  render() {\n    const {\n      data\n    } = this.state.data;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.fetchPathData(data),\n        children: \" get path\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default Path;","map":{"version":3,"sources":["/Users/othome/Desktop/projects/zonar/zpeek/src/components/asset-content/path.js"],"names":["React","Component","Path","constructor","props","fetchPathData","bind","state","data","componentDidMount","params","start","end","dbId","console","log","makeRequest","fetch","method","body","JSON","stringify","jdata","headers","getPathData","d","json","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAIA,MAAMC,IAAN,SAAmBD,SAAnB,CAA6B;AAC5BE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACjB,UAAMA,KAAN;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKC,KAAL,GAAa;AACZC,MAAAA,IAAI,EAAE,KAAKJ;AADC,KAAb;AAGA;;AAEDK,EAAAA,iBAAiB,GAAE,CAClB;;AAED,QAAMJ,aAAN,CAAqBK,MAArB,EAA8B;AAC7B,QAAIC,KAAK,GAAG,UAAZ;AACA,QAAIC,GAAG,GAAG,UAAV;AACA,QAAIC,IAAI,GAAGH,MAAX;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAgCL,MAAhC,EAJ6B,CAK7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,UAAMM,WAAW,GAAG,MAAMC,KAAK,CAAC,OAAD,EAAU;AAClCC,MAAAA,MAAM,EAAE,MAD0B;AAElCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAE,gBAAQC;AAAV,OAAf,CAF4B;AAGlCC,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB;AAHyB,KAAV,CAA/B;AAKA,UAAMC,WAAW,GAAG,MAAMP,KAAK,CAAC,OAAD,CAA/B,CAvB6B,CAwB7B;;AACA,UAAMQ,CAAC,GAAG,MAAMD,WAAW,CAACE,IAAZ,EAAhB,CAzB6B,CA0B7B;;AACAZ,IAAAA,OAAO,CAACC,GAAR,CAAYU,CAAZ;AACA,WAAO,MAAP;AACA;;AACDE,EAAAA,MAAM,GAAE;AACP,UAAM;AAACnB,MAAAA;AAAD,QAAS,KAAKD,KAAL,CAAWC,IAA1B;AACA,wBACC;AAAA,6BACC;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKH,aAAL,CAAmBG,IAAnB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADD;AAKA;;AAjD2B;;AAoD7B,eAAeN,IAAf","sourcesContent":["import React, {Component} from 'react';\n\n\n\nclass Path extends Component {\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.fetchPathData = this.fetchPathData.bind(this)\n\t\tthis.state = {\n\t\t\tdata :this.props\n\t\t}\n\t}\n\n\tcomponentDidMount(){\n\t}\n\n\tasync fetchPathData (params)  {\n\t\tlet start = 1603971032\n\t\tlet end = 1608230858\n\t\tlet dbId = params\n\t\tconsole.log('PARAMS WORKING! :',params)\n\t\t// const options = {\n\t\t// \t\t\t\tmethod : 'POST',\n\t\t// \t\t\t\theaders: {\n\t\t// \t\t\t\t\t'Content-Type': 'application/json'\n\t\t// \t      // 'Content-Type': 'application/x-www-form-urlencoded',\n\t\t// \t   \t\t\t\t },\n\t\t// \t\t\t\tbody : {\n\t\t// \t\t\t\t\t'params': { \n\t\t// \t\t\t\t\t\t'stime': start,\n\t\t// \t\t\t\t\t\t'etime': end,\n\t\t// \t\t\t\t\t\t'dbId' : dbId}\n\t\t// \t\t\t\t\t}\n\t\t// \t\t\t}\n\t\tconst makeRequest = await fetch('/path', {\n\t        method: 'POST',\n\t        body: JSON.stringify({ 'item': jdata}),\n\t        headers: {'Content-Type': 'application/json'}\n\t    })\n\t\tconst getPathData = await fetch('/path')\n\t\t// console.log(getPathData)\n\t\tconst d = await getPathData.json()\n\t\t// .then(d=>console.log(d))\n\t\tconsole.log(d)\n\t\treturn 'Done'\n\t}\n\trender(){\n\t\tconst {data} = this.state.data\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<button onClick={() => this.fetchPathData(data)}> get path</button>\n\t\t\t</div>\n\t\t\t)\n\t}\n }\n\nexport default Path;"]},"metadata":{},"sourceType":"module"}