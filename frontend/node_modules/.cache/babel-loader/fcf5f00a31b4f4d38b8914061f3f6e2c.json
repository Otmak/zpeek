{"ast":null,"code":"import _defineProperty from\"/Users/othome/Desktop/projects/zonar/zpeek/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/othome/Desktop/projects/zonar/zpeek/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/othome/Desktop/projects/zonar/zpeek/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useState}from'react';import'./header-appbar.css';import TestT from'./test-t';import AppBar from'@material-ui/core/AppBar';import Drawer from'@material-ui/core/Drawer';import MenuIcon from'@material-ui/icons/Menu';import List from'@material-ui/core/List';import Divider from'@material-ui/core/Divider';import Toolbar from'@material-ui/core/Toolbar';import useScrollTrigger from'@material-ui/core/useScrollTrigger';import{makeStyles}from'@material-ui/core/styles';import IconButton from'@material-ui/core/IconButton';import CloseIcon from'@material-ui/icons/Close';import MoreIcon from'@material-ui/icons/MoreVert';import AppContainer from'../app-container/app-container';var drawerWidth=240;var useStyles=makeStyles(function(theme){return{drawer:{width:drawerWidth,flexShrink:0},drawerPaper:{width:drawerWidth},drawerHeader:{display:'flex',alignItems:'center',// necessary for content to be below app bar\njustifyContent:'flex-start'}};});function ElevationScroll(props){var children=props.children,window=props.window;// Note that you normally won't need to set the window ref as useScrollTrigger\n// will default to window.\n// This is only being set here because the demo is in an iframe.\nvar trigger=useScrollTrigger({disableHysteresis:true,threshold:0,target:window?window():undefined});return/*#__PURE__*/React.cloneElement(children,{elevation:trigger?4:0});}// ElevationScroll.propTypes = {\n//   children: PropTypes.element.isRequired,\n//   *\n//    * Injected by the documentation to work in an iframe.\n//    * You won't need it on your project.\n//   window: PropTypes.func,\n// };\nexport default function HeaderAppBar(props){// console.log('PROPS INSIDE APPBARContainer COMP:' ,props)\n// const [color, setColor] = React.useState('default');\nvar _useState=useState(false),_useState2=_slicedToArray(_useState,2),open=_useState2[0],setOpen=_useState2[1];var _useState3=useState({activeOnly:false}),_useState4=_slicedToArray(_useState3,2),activeOnlyList=_useState4[0],setList=_useState4[1];var classes=useStyles();var handleDrawerOpen=function handleDrawerOpen(){setOpen(true);};var handleDrawerClose=function handleDrawerClose(){setOpen(false);};var appBarStyle={background:'linear-gradient(90deg, #4598DC, #B06AB3 )'};// const handleChange = (event) => {\n//   setColor(event.target.checked ? 'blue' : 'default');\n// };\nvar handleOpen=function handleOpen(){console.log('Logout click',window);localStorage.clear();window.location.reload();// localStorage.clear();\n};var infoFromChild=function infoFromChild(e){// const list = {\n//   all : true,\n//   active : false\n// }\nsetList(_objectSpread(_objectSpread({},activeOnlyList),{},_defineProperty({},e.target.name,e.target.checked)));// console.log(e.target.checked)\n};console.log(props);//   const { account, pass, assetdata} = props.data\n// const activeAssetsList = assetdata.filter( asset=> asset.status === '1')\n// const allAssetsList = props.data\nconsole.log('IS THE LIST ACTIVE ONLY ?',activeOnlyList);return/*#__PURE__*/_jsx(\"div\",{className:\"header-appbar\",children:/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(ElevationScroll,{children:/*#__PURE__*/_jsx(AppBar,{style:appBarStyle,children:/*#__PURE__*/_jsxs(Toolbar,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"thebetween\"}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(IconButton,{\"aria-label\":\"show more\",\"aria-controls\":'primary-search-account-menu-mobile',\"aria-haspopup\":\"true\",onClick:handleOpen,color:\"inherit\",children:/*#__PURE__*/_jsx(MoreIcon,{})})})]})})}),/*#__PURE__*/_jsx(Toolbar,{})]})});}","map":{"version":3,"sources":["/Users/othome/Desktop/projects/zonar/zpeek/src/components/topbar/header-appbar.js"],"names":["React","useState","TestT","AppBar","Drawer","MenuIcon","List","Divider","Toolbar","useScrollTrigger","makeStyles","IconButton","CloseIcon","MoreIcon","AppContainer","drawerWidth","useStyles","theme","drawer","width","flexShrink","drawerPaper","drawerHeader","display","alignItems","justifyContent","ElevationScroll","props","children","window","trigger","disableHysteresis","threshold","target","undefined","cloneElement","elevation","HeaderAppBar","open","setOpen","activeOnly","activeOnlyList","setList","classes","handleDrawerOpen","handleDrawerClose","appBarStyle","background","handleOpen","console","log","localStorage","clear","location","reload","infoFromChild","e","name","checked"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './header-appbar.css';\nimport TestT from './test-t';\nimport AppBar from '@material-ui/core/AppBar';\nimport Drawer from '@material-ui/core/Drawer';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport AppContainer from '../app-container/app-container';\n\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles((theme) => ({\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    // necessary for content to be below app bar\n    justifyContent: 'flex-start',\n  },\n}));\n\nfunction ElevationScroll(props) {\n  const { children, window } = props;\n  // Note that you normally won't need to set the window ref as useScrollTrigger\n  // will default to window.\n  // This is only being set here because the demo is in an iframe.\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 0,\n    target: window ? window() : undefined,\n  });\n\n  return React.cloneElement(children, {\n    elevation: trigger ? 4 : 0,\n  });\n}\n\n// ElevationScroll.propTypes = {\n//   children: PropTypes.element.isRequired,\n//   *\n//    * Injected by the documentation to work in an iframe.\n//    * You won't need it on your project.\n   \n//   window: PropTypes.func,\n// };\n\nexport default function HeaderAppBar(props) {\n  // console.log('PROPS INSIDE APPBARContainer COMP:' ,props)\n  // const [color, setColor] = React.useState('default');\n  const [open, setOpen] = useState(false);\n  const [activeOnlyList, setList] = useState({activeOnly : false});\n\n  const classes = useStyles();\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n\n  const appBarStyle = { background: 'linear-gradient(90deg, #4598DC, #B06AB3 )'}\n  // const handleChange = (event) => {\n  //   setColor(event.target.checked ? 'blue' : 'default');\n  // };\n  const handleOpen = ()=> {\n    console.log('Logout click', window)\n    localStorage.clear();\n    window.location.reload()\n    // localStorage.clear();\n  }\n  const infoFromChild = (e)=>{\n    // const list = {\n    //   all : true,\n    //   active : false\n    // }\n    setList({  ...activeOnlyList, [e.target.name]: e.target.checked })\n\n    // console.log(e.target.checked)\n\n  }\n  console.log(props)\n  //   const { account, pass, assetdata} = props.data\n  // const activeAssetsList = assetdata.filter( asset=> asset.status === '1')\n  // const allAssetsList = props.data\n\n  console.log('IS THE LIST ACTIVE ONLY ?', activeOnlyList)\n\n\n  return (\n    <div className='header-appbar'>\n      <React.Fragment>\n        <ElevationScroll>\n          <AppBar style={appBarStyle}>\n            <Toolbar>\n            <div className='thebetween'/>\n            <div >\n                <IconButton\n                  aria-label=\"show more\"\n                  aria-controls={'primary-search-account-menu-mobile'}\n                  aria-haspopup=\"true\"\n                  onClick={handleOpen}\n                  color=\"inherit\"\n                >\n                  <MoreIcon />\n                </IconButton>\n              </div>\n            </Toolbar>\n          </AppBar>\n        </ElevationScroll>\n        <Toolbar />\n      </React.Fragment>\n    </div>\n\n  );\n}\n"]},"metadata":{},"sourceType":"module"}