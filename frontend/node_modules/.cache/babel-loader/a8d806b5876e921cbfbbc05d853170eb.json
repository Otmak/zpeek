{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/othome/Desktop/projects/zonar/zpeek/src/App.js\";\nimport React, { Component } from 'react';\nimport AppContainer from './components/app-container/app-container';\nimport ElevateAppBar from './components/app-container/app-container';\nimport ControlCenter from './components/topbar/header-appbar';\nimport SignInFirst from './components/signin/signin';\nimport './App.css'; // add Tooltips all across app\n//https://material-ui.com/components/snackbars/ use these bars to show a console log activity\n// https://material-ui.com/components/dialogs/ this is for swapping account code and Full screen  gendata or path\\\n//https://material-ui.com/components/lists/ use this for layout of CONTROL MENU\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      assets: [],\n      searchFeild: '',\n      viewBothActiveAndInactive: false // accountCode : '',\n      // password : ''\n\n    };\n  } // componentDidMount() {\n  //   fetch('/assets')\n  //   .then(res=> res.json() )\n  //   .then(data => this.setState({ assets: data }))\n  // }\n\n\n  getGettingStartedData(e) {\n    // console.log(`${e.target.name}, : ${e.target.value}`)\n    // const {accountCode, password} this.state\n    const handle = e.target.name;\n    const handleValue = e.target.value;\n    console.log(handle, handleValue);\n    this.setState({\n      handle: handleValue\n    }); // console.log(e.target.name, )\n  }\n\n  letsGetStarted(e) {\n    e.preventDefault();\n    const {\n      accountCode,\n      password\n    } = this.state;\n\n    if (accountCode === '' || password === '') {\n      console.log('the form is empty...');\n    } else {\n      console.log(`Account : ${accountCode}  password ${password}`);\n    } //function to change view from active only to BothActive and inactive\n\n  }\n\n  render() {\n    const {\n      assets,\n      accountCode\n    } = this.state;\n    const assetListLenghth = assets.length; // const activeAssetsList = assets.filter( asset=> asset.status == '1')\n\n    console.log(accountCode);\n\n    if (accountCode != undefined) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: /*#__PURE__*/_jsxDEV(ControlCenter, {\n          data: assets\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(SignInFirst, {\n        getFormData: e => this.getGettingStartedData(e),\n        letsGetStarted: e => this.letsGetStarted(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/othome/Desktop/projects/zonar/zpeek/src/App.js"],"names":["React","Component","AppContainer","ElevateAppBar","ControlCenter","SignInFirst","App","constructor","state","assets","searchFeild","viewBothActiveAndInactive","getGettingStartedData","e","handle","target","name","handleValue","value","console","log","setState","letsGetStarted","preventDefault","accountCode","password","render","assetListLenghth","length","undefined"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,OAAOC,aAAP,MAA0B,mCAA1B;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAO,WAAP,C,CAEA;AACA;AACA;AACA;;AACA,eAAe,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AACvCM,EAAAA,WAAW,GAAE;AACb;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,EADG;AAEXC,MAAAA,WAAW,EAAE,EAFF;AAGXC,MAAAA,yBAAyB,EAAG,KAHjB,CAIX;AACA;;AALW,KAAb;AAOD,GAVwC,CAYzC;AAEA;AACA;AACA;AACA;;;AACAC,EAAAA,qBAAqB,CAACC,CAAD,EAAG;AACtB;AACA;AACA,UAAMC,MAAM,GAAGD,CAAC,CAACE,MAAF,CAASC,IAAxB;AACA,UAAMC,WAAW,GAAGJ,CAAC,CAACE,MAAF,CAASG,KAA7B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ,EAAoBG,WAApB;AACA,SAAKI,QAAL,CAAc;AAAEP,MAAAA,MAAM,EAAGG;AAAX,KAAd,EANsB,CAOtB;AAED;;AAGDK,EAAAA,cAAc,CAACT,CAAD,EAAG;AACfA,IAAAA,CAAC,CAACU,cAAF;AACA,UAAM;AAACC,MAAAA,WAAD;AAAcC,MAAAA;AAAd,QAA0B,KAAKjB,KAArC;;AACA,QAAKgB,WAAW,KAAI,EAAf,IAAqBC,QAAQ,KAAK,EAAvC,EAA2C;AACzCN,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACD,KAFD,MAEM;AACJD,MAAAA,OAAO,CAACC,GAAR,CAAa,aAAYI,WAAY,cAAaC,QAAS,EAA3D;AACD,KAPc,CAQf;;AACD;;AAGDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAACjB,MAAAA,MAAD;AAASe,MAAAA;AAAT,QAAwB,KAAKhB,KAAnC;AACA,UAAMmB,gBAAgB,GAAGlB,MAAM,CAACmB,MAAhC,CAFO,CAGP;;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAYI,WAAZ;;AAGA,QAAKA,WAAW,IAAIK,SAApB,EAAgC;AAC9B,0BACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACE,QAAC,aAAD;AAAe,UAAA,IAAI,EAAEpB;AAArB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADJ;AAIE;;AAEJ,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE,QAAC,WAAD;AAAa,QAAA,WAAW,EAAGI,CAAD,IAAK,KAAKD,qBAAL,CAA2BC,CAA3B,CAA/B;AAA8D,QAAA,cAAc,EAAGA,CAAD,IAAK,KAAKS,cAAL,CAAoBT,CAApB;AAAnF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAIA;;AA5DuC","sourcesContent":["import React, { Component } from 'react';\nimport AppContainer from './components/app-container/app-container';\nimport ElevateAppBar from './components/app-container/app-container';\nimport ControlCenter from './components/topbar/header-appbar';\nimport SignInFirst from './components/signin/signin'\nimport './App.css';\n\n// add Tooltips all across app\n//https://material-ui.com/components/snackbars/ use these bars to show a console log activity\n// https://material-ui.com/components/dialogs/ this is for swapping account code and Full screen  gendata or path\\\n//https://material-ui.com/components/lists/ use this for layout of CONTROL MENU\nexport default class App extends Component {\n    constructor(){\n    super()\n    this.state = {\n      assets: [],\n      searchFeild: '',\n      viewBothActiveAndInactive : false\n      // accountCode : '',\n      // password : ''\n     }\n  }\n\n  // componentDidMount() {\n\n  //   fetch('/assets')\n  //   .then(res=> res.json() )\n  //   .then(data => this.setState({ assets: data }))\n  // }\n  getGettingStartedData(e){\n    // console.log(`${e.target.name}, : ${e.target.value}`)\n    // const {accountCode, password} this.state\n    const handle = e.target.name\n    const handleValue = e.target.value\n    console.log(handle, handleValue)\n    this.setState({ handle : handleValue })\n    // console.log(e.target.name, )\n\n  }\n\n\n  letsGetStarted(e){\n    e.preventDefault()\n    const {accountCode, password} = this.state\n    if ( accountCode ==='' || password === '') {\n      console.log('the form is empty...')\n    }else {\n      console.log(`Account : ${accountCode}  password ${password}`)\n    }\n    //function to change view from active only to BothActive and inactive\n  }\n\n  \n  render() {\n    const {assets, accountCode} = this.state\n    const assetListLenghth = assets.length\n    // const activeAssetsList = assets.filter( asset=> asset.status == '1')\n    console.log(accountCode)\n\n\n    if ( accountCode != undefined ) {\n      return(\n          <div className='App'>\n            <ControlCenter data={assets}/>\n          </div>\n      )} \n\n    return (\n      <div className='App'>\n        <SignInFirst getFormData={(e)=>this.getGettingStartedData(e)} letsGetStarted={(e)=>this.letsGetStarted(e)}/>\n      </div>\n  )}\n}\n"]},"metadata":{},"sourceType":"module"}