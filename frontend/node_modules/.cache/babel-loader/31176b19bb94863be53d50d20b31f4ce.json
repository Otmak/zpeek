{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/othome/Desktop/projects/zonar/zpeek/src/components/header/header-appbar.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Switch from '@material-ui/core/Switch';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport Container from '@material-ui/core/Container';\nimport TabAndPanel from '../tabs/tab';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport TabComponent from '../tabs/tab';\n\nfunction ElevationScroll(props) {\n  _s();\n\n  const {\n    children,\n    window\n  } = props; // Note that you normally won't need to set the window ref as useScrollTrigger\n  // will default to window.\n  // This is only being set here because the demo is in an iframe.\n\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 0,\n    target: window ? window() : undefined\n  });\n  return /*#__PURE__*/React.cloneElement(children, {\n    elevation: trigger ? 4 : 0\n  });\n}\n\n_s(ElevationScroll, \"EC2GbbZl9x3XKoXLVx1H89cOBi0=\", false, function () {\n  return [useScrollTrigger];\n});\n\n_c = ElevationScroll;\nElevationScroll.propTypes = {\n  children: PropTypes.element.isRequired,\n\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  window: PropTypes.func\n};\nexport default function HeaderAppBar(props) {\n  _s2();\n\n  // console.log('PROPS INSIDE APPBARContainer COMP:' ,props)\n  const [color, setColor] = React.useState('default');\n  const appBarStyle = {\n    background: 'linear-gradient(90deg, #4598DC, #B06AB3 )'\n  };\n\n  const handleChange = event => {\n    setColor(event.target.checked ? 'blue' : 'default');\n  };\n\n  const theme = React.useMemo(() => {\n    if (color === 'blue') {\n      return createMuiTheme({\n        palette: {\n          secondary: {\n            main: 'blue',\n            contrastText: '#fff'\n          }\n        }\n      });\n    }\n\n    return createMuiTheme();\n  }, [color]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ElevationScroll, {\n      children: /*#__PURE__*/_jsxDEV(AppBar, {\n        style: appBarStyle,\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Fix It!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Switch, {\n              checked: color === 'blue',\n              onChange: handleChange,\n              color: \"primary\",\n              value: \"dynamic-class-name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 21\n            }, this),\n            label: \"Blue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Toolbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(HeaderAppBar, \"GrbQUXMGIdBkI8mAdeeBRnNAOM4=\");\n\n_c2 = HeaderAppBar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ElevationScroll\");\n$RefreshReg$(_c2, \"HeaderAppBar\");","map":{"version":3,"sources":["/Users/othome/Desktop/projects/zonar/zpeek/src/components/header/header-appbar.js"],"names":["React","PropTypes","AppBar","Toolbar","Typography","Switch","useScrollTrigger","Container","TabAndPanel","FormControlLabel","createMuiTheme","ThemeProvider","TabComponent","ElevationScroll","props","children","window","trigger","disableHysteresis","threshold","target","undefined","cloneElement","elevation","propTypes","element","isRequired","func","HeaderAppBar","color","setColor","useState","appBarStyle","background","handleChange","event","checked","theme","useMemo","palette","secondary","main","contrastText"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Switch from '@material-ui/core/Switch';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport Container from '@material-ui/core/Container';\nimport TabAndPanel from '../tabs/tab';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport TabComponent from '../tabs/tab';\n\nfunction ElevationScroll(props) {\n  const { children, window } = props;\n  // Note that you normally won't need to set the window ref as useScrollTrigger\n  // will default to window.\n  // This is only being set here because the demo is in an iframe.\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 0,\n    target: window ? window() : undefined,\n  });\n\n  return React.cloneElement(children, {\n    elevation: trigger ? 4 : 0,\n  });\n}\n\nElevationScroll.propTypes = {\n  children: PropTypes.element.isRequired,\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  window: PropTypes.func,\n};\n\nexport default function HeaderAppBar(props) {\n  // console.log('PROPS INSIDE APPBARContainer COMP:' ,props)\n  const [color, setColor] = React.useState('default');\n  const appBarStyle = { background: 'linear-gradient(90deg, #4598DC, #B06AB3 )'}\n  const handleChange = (event) => {\n    setColor(event.target.checked ? 'blue' : 'default');\n  };\n  const theme = React.useMemo(() => {\n    if (color === 'blue') {\n      return createMuiTheme({\n        palette: {\n          secondary: {\n            main: 'blue',\n            contrastText: '#fff',\n          },\n        },\n      });\n    }\n    return createMuiTheme();\n  }, [color]);\n  return (\n    <React.Fragment>\n      <ElevationScroll>\n        <AppBar style={appBarStyle} >\n          <Toolbar>\n            <Typography variant=\"h6\">Fix It!</Typography>\n                <FormControlLabel\n                  control={\n                    <Switch\n                      checked={color === 'blue'}\n                      onChange={handleChange}\n                      color=\"primary\"\n                      value=\"dynamic-class-name\"\n                    />\n                  }\n                  label=\"Blue\"\n                />\n          </Toolbar>\n        </AppBar>\n      </ElevationScroll>\n      <Toolbar />\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}