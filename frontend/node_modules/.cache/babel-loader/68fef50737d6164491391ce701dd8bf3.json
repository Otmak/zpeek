{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/othome/Desktop/projects/zonar/zpeek/frontend/src/components/asset-content/mani/location/location.js\";\nimport React, { Component } from 'react';\nimport Chip from '@material-ui/core/Chip';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport Button from '@material-ui/core/Button';\nimport './location.css';\nexport default class Location extends Component {\n  constructor(props) {\n    super(props);\n    this._isMounted = false;\n\n    this.Locationdataresponse = () => {\n      const {\n        locationDetails,\n        data,\n        isLocationLoading\n      } = this.state;\n      console.log(locationDetails.length);\n\n      if (locationDetails.length === 0) {\n        // console.log('No gps data')\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [isLocationLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Skeleton, {\n              style: {\n                height: 80\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n              style: {\n                height: 30\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n              style: {\n                height: 30\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 9\n          }, this), !isLocationLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              align: \"center\",\n              children: \"No Location Data \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              align: \"right\",\n              onClick: () => this.fetchLocationData(),\n              color: \"primary\",\n              children: \"Get gps\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 10\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 7\n        }, this);\n      } else {\n        const getGPSDATA = locationDetails[0]; // console.log(getGPSDATA,getGPSDATA[0])\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: true,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                gutterBottom: true,\n                variant: \"subtitle1\",\n                children: \"dfjsdo GPS ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 8\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                gutterBottom: true,\n                variant: \"h6\",\n                children: \"location details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 16\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 12\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 10\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            className: \"gps-grid-container\",\n            container: true,\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: true,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textSecondary\",\n                variant: \"body2\",\n                children: \"SPEED\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textSecondary\",\n                variant: \"body2\",\n                children: [locationDetails.speed, \"/mph\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => this.fetchLocationData(),\n              color: \"primary\",\n              children: \"Get GPS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 12\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 7\n        }, this);\n      }\n    };\n\n    this.state = {\n      locationDetails: [],\n      data: this.props.data,\n      isComponentMounted: true,\n      isLocationLoading: true\n    };\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.fetchLocationData();\n    this.setState({\n      isComponentMounted: true\n    });\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n    console.log('Location COMPONENT UNMOUNTED');\n    this.setState({\n      isComponentMounted: false\n    });\n  }\n\n  async fetchLocationData() {\n    console.log('fetching location...');\n    this.setState({\n      locationDetails: []\n    });\n    const {\n      data: {\n        id = null,\n        gpsid = null,\n        account,\n        hashed\n      },\n      isComponentMounted\n    } = this.state;\n    console.log('State Cleared!...........', isComponentMounted);\n\n    if (!isComponentMounted || gpsid === null) {\n      // console.log(` Location :- Either Component unmounted or gps null mouted?==>${isComponentMounted} gps==> ${gpsid}`)\n      this.setState({\n        isLocationLoading: false\n      });\n      return;\n    } else {\n      console.log('L :- setting state of Loading to TRUE ');\n      this.setState({\n        isLocationLoading: true\n      });\n      let bodyData = {\n        'params': {\n          'id': id,\n          'gpsid': gpsid,\n          'account': account,\n          'hashed': hashed\n        }\n      };\n      const makeRequest = await fetch('/location', {\n        method: 'POST',\n        body: JSON.stringify(bodyData),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }); // console.log('End',makeRequest)\n\n      const getLocationData = await makeRequest.json();\n      console.log('Done making request', getLocationData, isComponentMounted);\n\n      if (makeRequest.status === 200 && this._isMounted) {\n        if (getLocationData.error) {\n          console.log('Error in server ', getLocationData.error);\n          this.setState({\n            isLocationLoading: false\n          });\n        } else {\n          if (getLocationData && isComponentMounted && this._isMounted) {\n            console.log('Location on the way!');\n            this.setState({\n              locationDetails: getLocationData.locationresponse,\n              isLocationLoading: false\n            }); // console.log(getLocationData)\n          } else {\n            // this.setState({pathexists : false})\n            console.log('Error AFTER 200 status on fetch');\n          }\n        }\n      } else {\n        console.log(`Error AFTER 200 status on fetch or Component is unmounted... COMP mounted?==>${this._isMounted}`); // this.setSate({gettingMani: false})\n\n        return;\n      }\n    }\n\n    return 'Done';\n  }\n\n  render() {\n    const {\n      locationDetails,\n      isLocationLoading\n    } = this.state;\n\n    const functionn = () => this.fetchLocationData();\n\n    console.log('LOCATION:', this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [isLocationLoading && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" Loading..... \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 28\n      }, this), !isLocationLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.Locationdataresponse()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 4\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/othome/Desktop/projects/zonar/zpeek/frontend/src/components/asset-content/mani/location/location.js"],"names":["React","Component","Chip","Grid","Typography","Skeleton","Button","Location","constructor","props","_isMounted","Locationdataresponse","locationDetails","data","isLocationLoading","state","console","log","length","height","fetchLocationData","getGPSDATA","speed","isComponentMounted","componentDidMount","setState","componentWillUnmount","id","gpsid","account","hashed","bodyData","makeRequest","fetch","method","body","JSON","stringify","headers","getLocationData","json","status","error","locationresponse","render","functionn"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAO,gBAAP;AAGA,eAAe,MAAMC,QAAN,SAAuBN,SAAvB,CAAgC;AAE9CO,EAAAA,WAAW,CAAEC,KAAF,EAAQ;AAClB,UAAMA,KAAN;AADkB,SADnBC,UACmB,GADN,KACM;;AAAA,SAkFnBC,oBAlFmB,GAkFI,MAAI;AAC1B,YAAM;AAACC,QAAAA,eAAD;AAAkBC,QAAAA,IAAlB;AAAwBC,QAAAA;AAAxB,UAA6C,KAAKC,KAAxD;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,eAAe,CAACM,MAA5B;;AAEE,UAAIN,eAAe,CAACM,MAAhB,KAA2B,CAA/B,EAAkC;AACjC;AACA,4BACC;AAAA,qBACGJ,iBAAiB,iBAClB;AAAA,oCACD,QAAC,QAAD;AAAU,cAAA,KAAK,EAAE;AAAEK,gBAAAA,MAAM,EAAC;AAAT;AAAjB;AAAA;AAAA;AAAA;AAAA,oBADC,eAED,QAAC,QAAD;AAAU,cAAA,KAAK,EAAE;AAAEA,gBAAAA,MAAM,EAAC;AAAT;AAAjB;AAAA;AAAA;AAAA;AAAA,oBAFC,eAGD,QAAC,QAAD;AAAU,cAAA,KAAK,EAAE;AAAEA,gBAAAA,MAAM,EAAC;AAAT;AAAjB;AAAA;AAAA;AAAA;AAAA,oBAHC,eAID,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,oBAJC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,EASG,CAACL,iBAAD,iBACD;AAAA,oCACC,QAAC,UAAD;AAAY,cAAA,KAAK,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,eAEC,QAAC,MAAD;AAAQ,cAAA,KAAK,EAAC,OAAd;AAAsB,cAAA,OAAO,EAAE,MAAK,KAAKM,iBAAL,EAApC;AAA8D,cAAA,KAAK,EAAC,SAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD;AAkBA,OApBD,MAoBK;AACJ,cAAMC,UAAU,GAAGT,eAAe,CAAC,CAAD,CAAlC,CADI,CAEJ;;AACA,4BACC;AAAA,kCACC,QAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAgB,YAAA,UAAU,EAAC,QAA3B;AAAA,oCACD,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,MAAb;AAAA,qCACC,QAAC,UAAD;AAAY,gBAAA,YAAY,MAAxB;AAAyB,gBAAA,OAAO,EAAC,WAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,oBADC,eAMI,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAA,qCACI,QAAC,UAAD;AAAY,gBAAA,YAAY,MAAxB;AAAyB,gBAAA,OAAO,EAAC,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBANJ,eAWE;AAAA;AAAA;AAAA;AAAA,oBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,eAeE,QAAC,IAAD;AAAM,YAAA,SAAS,EAAC,oBAAhB;AAAqC,YAAA,SAAS,MAA9C;AAA+C,YAAA,UAAU,EAAC,QAA1D;AAAA,oCACF,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,MAAb;AAAA,qCACE,QAAC,UAAD;AAAY,gBAAA,KAAK,EAAC,eAAlB;AAAkC,gBAAA,OAAO,EAAC,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADE,eAMF,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAA,qCACE,QAAC,UAAD;AAAY,gBAAA,KAAK,EAAC,eAAlB;AAAkC,gBAAA,OAAO,EAAC,OAA1C;AAAA,2BACEA,eAAe,CAACU,KADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBANE;AAAA;AAAA;AAAA;AAAA;AAAA,kBAfF,eA4BE;AAAK,YAAA,SAAS,EAAC,EAAf;AAAA,mCACG,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAE,MAAK,KAAKF,iBAAL,EAAtB;AAAgD,cAAA,KAAK,EAAC,SAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,kBA5BF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD;AAkCA;AACD,KAhJgB;;AAElB,SAAKL,KAAL,GAAa;AACZH,MAAAA,eAAe,EAAG,EADN;AAEZC,MAAAA,IAAI,EAAG,KAAKJ,KAAL,CAAWI,IAFN;AAGZU,MAAAA,kBAAkB,EAAG,IAHT;AAIZT,MAAAA,iBAAiB,EAAG;AAJR,KAAb;AAMA;;AAEDU,EAAAA,iBAAiB,GAAE;AAClB,SAAKd,UAAL,GAAkB,IAAlB;AACA,SAAKU,iBAAL;AACA,SAAKK,QAAL,CAAc;AAACF,MAAAA,kBAAkB,EAAG;AAAtB,KAAd;AACA;;AAGDG,EAAAA,oBAAoB,GAAE;AACrB,SAAKhB,UAAL,GAAkB,KAAlB;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACA,SAAKQ,QAAL,CAAc;AAACF,MAAAA,kBAAkB,EAAG;AAAtB,KAAd;AACG;;AAEF,QAAMH,iBAAN,GAA0B;AAE3BJ,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACA,SAAKQ,QAAL,CAAc;AAACb,MAAAA,eAAe,EAAG;AAAnB,KAAd;AACA,UAAM;AAAEC,MAAAA,IAAI,EAAG;AAAEc,QAAAA,EAAE,GAAC,IAAL;AAAWC,QAAAA,KAAK,GAAC,IAAjB;AAAuBC,QAAAA,OAAvB;AAAgCC,QAAAA;AAAhC,OAAT;AAAmDP,MAAAA;AAAnD,QAAyE,KAAKR,KAApF;AAGAC,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAwCM,kBAAxC;;AAGA,QAAI,CAACA,kBAAD,IAAuBK,KAAK,KAAK,IAArC,EAA0C;AACzC;AACA,WAAKH,QAAL,CAAc;AAACX,QAAAA,iBAAiB,EAAE;AAApB,OAAd;AACA;AACA,KAJD,MAIK;AACJE,MAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ;AACA,WAAKQ,QAAL,CAAc;AAACX,QAAAA,iBAAiB,EAAG;AAArB,OAAd;AACA,UAAIiB,QAAQ,GAAG;AACf,kBAAU;AACT,gBAAMJ,EADG;AAET,mBAASC,KAFA;AAGT,qBAAUC,OAHD;AAIT,oBAASC;AAJA;AADK,OAAf;AAOA,YAAME,WAAW,GAAG,MAAMC,KAAK,CAAC,WAAD,EAAc;AACtCC,QAAAA,MAAM,EAAE,MAD8B;AAEtCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,QAAf,CAFgC;AAGtCO,QAAAA,OAAO,EAAE;AAAC,0BAAgB;AAAjB;AAH6B,OAAd,CAA/B,CAVI,CAeD;;AACH,YAAMC,eAAe,GAAG,MAAMP,WAAW,CAACQ,IAAZ,EAA9B;AACAxB,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAkCsB,eAAlC,EAAmDhB,kBAAnD;;AAGA,UAAIS,WAAW,CAACS,MAAZ,KAAuB,GAAvB,IAA8B,KAAK/B,UAAvC,EAAoD;AACnD,YAAI6B,eAAe,CAACG,KAApB,EAA2B;AAC1B1B,UAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAA+BsB,eAAe,CAACG,KAA/C;AACA,eAAKjB,QAAL,CAAc;AAACX,YAAAA,iBAAiB,EAAG;AAArB,WAAd;AACA,SAHD,MAGK;AACJ,cAAIyB,eAAe,IAAIhB,kBAAnB,IAAyC,KAAKb,UAAlD,EAA8D;AAC7DM,YAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACA,iBAAKQ,QAAL,CAAc;AAACb,cAAAA,eAAe,EAAG2B,eAAe,CAACI,gBAAnC;AAAqD7B,cAAAA,iBAAiB,EAAG;AAAzE,aAAd,EAF6D,CAG7D;AACA,WAJD,MAIK;AACJ;AACAE,YAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACA;AACD;AACD,OAdD,MAcK;AACJD,QAAAA,OAAO,CAACC,GAAR,CAAa,gFAA+E,KAAKP,UAAW,EAA5G,EADI,CAEJ;;AACA;AACA;AACD;;AAED,WAAO,MAAP;AACA;;AAoEDkC,EAAAA,MAAM,GAAE;AAEP,UAAM;AAAChC,MAAAA,eAAD;AAAkBE,MAAAA;AAAlB,QAAuC,KAAKC,KAAlD;;AACA,UAAM8B,SAAS,GAAG,MAAK,KAAKzB,iBAAL,EAAvB;;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwB,IAAxB;AAEA,wBACC;AAAA,iBACGH,iBAAiB,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADxB,EAEE,CAACA,iBAAD,iBACA;AAAA,kBACE,KAAKH,oBAAL;AADF;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AASE;;AApK2C","sourcesContent":["import React, {Component} from 'react';\nimport Chip from '@material-ui/core/Chip';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport Button from '@material-ui/core/Button';\nimport './location.css';\n\n\nexport default class Location extends Component{\n\t_isMounted = false;\n\tconstructor (props){\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tlocationDetails : [],\n\t\t\tdata : this.props.data,\n\t\t\tisComponentMounted : true,\n\t\t\tisLocationLoading : true\n\t\t}\n\t}\n\n\tcomponentDidMount(){\n\t\tthis._isMounted = true;\n\t\tthis.fetchLocationData()\n\t\tthis.setState({isComponentMounted : true})\n\t}\n\n\n\tcomponentWillUnmount(){\n\t\tthis._isMounted = false;\n\t\tconsole.log('Location COMPONENT UNMOUNTED')\n\t\tthis.setState({isComponentMounted : false})\n    }\n\n  \tasync fetchLocationData() {\n\n\t\tconsole.log('fetching location...')\n\t\tthis.setState({locationDetails : []})\n\t\tconst { data : { id=null, gpsid=null, account, hashed }, isComponentMounted} = this.state\n\n\n\t\tconsole.log('State Cleared!...........',isComponentMounted)\n\t\t\n\n\t\tif (!isComponentMounted || gpsid === null){\n\t\t\t// console.log(` Location :- Either Component unmounted or gps null mouted?==>${isComponentMounted} gps==> ${gpsid}`)\n\t\t\tthis.setState({isLocationLoading: false})\n\t\t\treturn;\n\t\t}else{\n\t\t\tconsole.log('L :- setting state of Loading to TRUE ')\n\t\t\tthis.setState({isLocationLoading : true})\n\t\t\tlet bodyData = {\n\t\t\t'params': {\n\t\t\t\t'id': id,\n\t\t\t\t'gpsid': gpsid,\n\t\t\t\t'account':account,\n\t\t\t\t'hashed':hashed\n\t\t\t\t}}\n\t\t\tconst makeRequest = await fetch('/location', {\n\t\t        method: 'POST',\n\t\t        body: JSON.stringify(bodyData),\n\t\t        headers: {'Content-Type': 'application/json'}\n\t\t    })\n\t\t    // console.log('End',makeRequest)\n\t\t\tconst getLocationData = await makeRequest.json()\n\t\t\tconsole.log('Done making request',getLocationData, isComponentMounted)\n\n\n\t\t\tif (makeRequest.status === 200 && this._isMounted ) {\n\t\t\t\tif (getLocationData.error) {\n\t\t\t\t\tconsole.log('Error in server ',getLocationData.error )\n\t\t\t\t\tthis.setState({isLocationLoading : false})\n\t\t\t\t}else{\n\t\t\t\t\tif (getLocationData && isComponentMounted && this._isMounted) {\n\t\t\t\t\t\tconsole.log('Location on the way!')\n\t\t\t\t\t\tthis.setState({locationDetails : getLocationData.locationresponse, isLocationLoading : false})\n\t\t\t\t\t\t// console.log(getLocationData)\n\t\t\t\t\t}else{\n\t\t\t\t\t\t// this.setState({pathexists : false})\n\t\t\t\t\t\tconsole.log('Error AFTER 200 status on fetch')\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tconsole.log(`Error AFTER 200 status on fetch or Component is unmounted... COMP mounted?==>${this._isMounted}`)\n\t\t\t\t// this.setSate({gettingMani: false})\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\treturn 'Done'\n\t}\n\n\n\tLocationdataresponse = ()=>{\n\t\tconst {locationDetails, data, isLocationLoading} = this.state\n\t\tconsole.log(locationDetails.length)\n\n  \t\tif (locationDetails.length === 0) {\n  \t\t\t// console.log('No gps data')\n  \t\t\treturn(\n  \t\t\t\t<div>\n  \t\t\t\t\t{ isLocationLoading &&\n  \t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Skeleton style={{ height:80 }}/>\n\t\t\t\t\t\t\t<Skeleton style={{ height:30 }}/>\n\t\t\t\t\t\t\t<Skeleton style={{ height:30 }}/>\n\t\t\t\t\t\t\t<Skeleton />\n  \t\t\t\t\t\t</div> \n  \t\t\t\t\t}\n\t  \t\t\t\t{ !isLocationLoading && \n\t  \t\t\t\t\t<div>\n\t\t  \t\t\t\t\t<Typography align='center'>No Location Data </Typography>\n\t\t  \t\t\t\t\t<Button align='right' onClick={()=> this.fetchLocationData()} color=\"primary\">Get gps</Button>\n\t  \t\t\t\t\t</div>\n\t  \t\t\t\t}\n  \t\t\t\t</div>\n  \t\t\t\t)\n  \t\t}else{\n  \t\t\tconst getGPSDATA = locationDetails[0]\n  \t\t\t// console.log(getGPSDATA,getGPSDATA[0])\n  \t\t\treturn (\n  \t\t\t\t<div>\n\t  \t\t\t\t<Grid container alignItems=\"center\">\n\t\t\t\t\t\t<Grid item xs>\n\t\t\t\t\t\t\t<Typography gutterBottom variant=\"subtitle1\">\n\t\t\t\t\t\t\t\tdfjsdo GPS ID\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</Grid>\n\t\t\t        <Grid item>\n\t\t\t            <Typography gutterBottom variant=\"h6\">\n\t\t\t              location details\n\t\t\t            </Typography>\n\t\t\t        </Grid>\n\t\t\t\t     <br/>\n\n\t\t\t\t    </Grid>\n\t\t\t\t    <Grid className='gps-grid-container' container alignItems=\"center\">\n\t\t\t\t\t\t<Grid item xs>\n\t\t\t\t\t\t  <Typography color=\"textSecondary\" variant=\"body2\">\n\t\t\t\t\t\t  \tSPEED\n\t\t\t\t\t\t  </Typography>\n\t\t\t\t\t\t</Grid>\t\t\t          \n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t  <Typography color=\"textSecondary\" variant=\"body2\">\n\t\t\t\t\t\t  \t{locationDetails.speed}/mph\n\t\t\t\t\t\t  </Typography>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t\n\t  \t\t\t  <div className=''>\n\t\t\t        <Button onClick={()=> this.fetchLocationData()} color=\"primary\">Get GPS</Button>\n\t\t\t      </div>\n  \t\t\t\t</div>\n  \t\t\t)\n  \t\t}\n  \t}\n\n\n\trender(){\n\n\t\tconst {locationDetails, isLocationLoading} = this.state\n\t\tconst functionn = ()=> this.fetchLocationData()\n\t\tconsole.log('LOCATION:',this)\n\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t{ isLocationLoading && <span> Loading..... </span> }\n\t\t\t\t{!isLocationLoading &&\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{this.Locationdataresponse()}\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t</div>\n\t\t)}\n}"]},"metadata":{},"sourceType":"module"}