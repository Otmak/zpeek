{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/othome/Desktop/projects/zonar/zpeek/src/components/asset-content/mani/tablet/tablet.js\";\nimport React, { Component } from 'react';\nimport Chip from '@material-ui/core/Chip';\nimport DoneIcon from '@material-ui/icons/Done';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography'; // const useStyles = makeStyles((theme) => ({\n//   root: {\n//     width: '100%',\n//     maxWidth: 360,\n//     backgroundColor: theme.palette.background.paper,\n//   },\n//   section1: {\n//     margin: theme.spacing(3, 2),\n//   },\n//   section2: {\n//     margin: theme.spacing(2),\n//   },\n//   section3: {\n//     margin: theme.spacing(3, 1, 1),\n//   },\n// }));\n// const style = {\n//   width: 360,\n//   maxWidth: '360px',\n// }\n\nexport default class Tablet extends Component {\n  constructor(props) {\n    super(props);\n\n    this.validateData = () => {\n      const {\n        assetInfo,\n        packageManifest\n      } = this.state.tabletMani;\n      console.log('from tablet', packageManifest);\n\n      if (packageManifest === undefined) {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" No Mani \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 8\n        }, this);\n      } else {\n        const som = '';\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" Here is your Mani \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 7\n        }, this);\n      }\n    };\n\n    this.state = {\n      data: this.props.data,\n      tabletMani: []\n    };\n  }\n\n  componentDidMount() {\n    this.fetchManiData();\n  }\n\n  hoverAction() {\n    console.log('hover');\n  }\n\n  async fetchManiData() {\n    console.log('fetching MANI'); // const { assetInfo : { id=null, gps=null }} = this.state\n\n    const {\n      data: {\n        id = null,\n        gpsid = null\n      }\n    } = this.state;\n\n    if (gpsid === null) {\n      console.log('This asset has no GPSID');\n    } else {\n      let bodyData = {\n        'params': {\n          'id': id,\n          'gpsid': gpsid\n        }\n      };\n      const makeRequest = await fetch('/mani', {\n        method: 'POST',\n        body: JSON.stringify(bodyData),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log('End', makeRequest);\n      const getManiData = await makeRequest.json(); // console.log(getManiData)\n\n      if (makeRequest.status === 200) {\n        if (getManiData.error) {\n          console.log('Error in server bud');\n          this.setState({\n            maniexists: false\n          });\n        } else {\n          if (getManiData) {\n            this.setState({\n              tabletMani: getManiData.maniresponse\n            });\n            console.log(getManiData);\n          } else {\n            this.setState({\n              pathexists: false\n            });\n          }\n        }\n      }\n    }\n\n    return 'Done';\n  }\n\n  render() {\n    // const {assetInfo, packageManifest} = this.state.tabletMani\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: true,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              gutterBottom: true,\n              variant: \"h6\",\n              children: \"Toothbrush\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 14\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              gutterBottom: true,\n              variant: \"h6\",\n              children: \"$4.50\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 14\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 12\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"textSecondary\",\n          variant: \"body2\",\n          children: \"Pinstriped cornflower blue cotton blouse or just down the hall.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        variant: \"middle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"body1\",\n          children: \"somth random info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" Apps :\", /*#__PURE__*/_jsxDEV(Chip, {\n            className: \"\",\n            label: \"Extra Soft\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(Chip, {\n            className: \"\",\n            color: \"primary\",\n            label: \"Soft\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(Chip, {\n            className: \"\",\n            label: \"Medium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(Chip, {\n            className: \"\",\n            label: \"Hard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 12\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => this.fetchManiData(),\n          color: \"primary\",\n          children: \"Get Mani\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 6\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/othome/Desktop/projects/zonar/zpeek/src/components/asset-content/mani/tablet/tablet.js"],"names":["React","Component","Chip","DoneIcon","Button","Grid","Divider","Typography","Tablet","constructor","props","validateData","assetInfo","packageManifest","state","tabletMani","console","log","undefined","som","data","componentDidMount","fetchManiData","hoverAction","id","gpsid","bodyData","makeRequest","fetch","method","body","JSON","stringify","headers","getManiData","json","status","error","setState","maniexists","maniresponse","pathexists","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Chip from '@material-ui/core/Chip';\nimport DoneIcon from '@material-ui/icons/Done';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\n\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     width: '100%',\n//     maxWidth: 360,\n//     backgroundColor: theme.palette.background.paper,\n//   },\n//   section1: {\n//     margin: theme.spacing(3, 2),\n//   },\n//   section2: {\n//     margin: theme.spacing(2),\n//   },\n//   section3: {\n//     margin: theme.spacing(3, 1, 1),\n//   },\n// }));\n// const style = {\n//   width: 360,\n//   maxWidth: '360px',\n// }\n\nexport default class Tablet extends Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      data : this.props.data,\n      tabletMani : []\n    }\n  }\n\n  componentDidMount(){\n  \tthis.fetchManiData()\n  }\n  hoverAction(){\n  \tconsole.log('hover')\n  }\n\n\n  async fetchManiData() {\n\n\tconsole.log('fetching MANI')\n\t// const { assetInfo : { id=null, gps=null }} = this.state\n\tconst { data : { id=null, gpsid=null }} = this.state\n\n\n\tif (gpsid === null){\n\t\tconsole.log('This asset has no GPSID')\n\t}else{\n\t\tlet bodyData = {\n\t\t'params': {\n\t\t\t'id': id,\n\t\t\t'gpsid': gpsid\n\t\t\t}}\n\t\tconst makeRequest = await fetch('/mani', {\n\t        method: 'POST',\n\t        body: JSON.stringify(bodyData),\n\t        headers: {'Content-Type': 'application/json'}\n\t    })\n\t    console.log('End',makeRequest)\n\t\tconst getManiData = await makeRequest.json()\n\t\t// console.log(getManiData)\n\n\n\t\tif (makeRequest.status === 200) {\n\t\t\tif (getManiData.error) {\n\t\t\t\tconsole.log('Error in server bud')\n\t\t\t\tthis.setState({maniexists : false})\n\t\t\t}else{\n\t\t\t\tif (getManiData) {\n\t\t\t\t\tthis.setState({tabletMani : getManiData.maniresponse})\n\t\t\t\t\tconsole.log(getManiData)\n\t\t\t\t}else{\n\t\t\t\t\tthis.setState({pathexists : false})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn 'Done'\n\t}\n\n\n\tvalidateData = ()=>{\n  \t\tconst {assetInfo, packageManifest} = this.state.tabletMani\n  \t\tconsole.log('from tablet',packageManifest)\n  \t\tif (packageManifest === undefined) {\n  \t\t\treturn (\n  \t\t\t\t\t<p> No Mani </p>\n  \t\t\t\t)\n  \t\t}else{\n  \t\t\tconst som = ''\n  \t\t\treturn (\n  \t\t\t\t<p> Here is your Mani </p>\n  \t\t\t\t)\n  \t\t}\n\n  \t}\n\n  render(){\n  \t// const {assetInfo, packageManifest} = this.state.tabletMani\n\n  \t\n\treturn (\n\t    <div >\n\t      <div className=''>\n\t        <Grid container alignItems=\"center\">\n\t          <Grid item xs>\n\t            <Typography gutterBottom variant=\"h6\">\n\t              Toothbrush\n\t            </Typography>\n\t          </Grid>\n\t          <Grid item>\n\t            <Typography gutterBottom variant=\"h6\">\n\t              $4.50\n\t            </Typography>\n\t          </Grid>\n\t        </Grid>\n\t        <Typography color=\"textSecondary\" variant=\"body2\">\n\t          Pinstriped cornflower blue cotton blouse or just down the\n\t          hall.\n\t        </Typography>\n\t      </div>\n\t      <Divider variant=\"middle\" />\n\t      <div className=''>\n\t        <Typography gutterBottom variant=\"body1\">\n\t          somth random info\n\t        </Typography>\n\t        <div> Apps : \n\t          <Chip className='' label=\"Extra Soft\" />\n\t          <Chip className='' color=\"primary\" label=\"Soft\" />\n\t          <Chip className='' label=\"Medium\" />\n\t          <Chip className=''label=\"Hard\" />\n\n\n\t        </div>\n\t      </div>\n\t      <div className=''>\n\t        <Button onClick={()=> this.fetchManiData()} color=\"primary\">Get Mani</Button>\n\t      </div>\n\t    </div>\n\t  );\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}