{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/othome/Desktop/projects/zonar/zpeek/src/components/topbar/header-appbar.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './header-appbar.css';\nimport TestT from './test-t';\nimport AppBar from '@material-ui/core/AppBar';\nimport Drawer from '@material-ui/core/Drawer';\nimport Fab from '@material-ui/core/Fab';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport AppContainer from '../app-container/app-container';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport SwapHorizRoundedIcon from '@material-ui/icons/SwapHorizRounded';\nconst drawerWidth = 240;\nconst useStyles = makeStyles(theme => ({\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    // necessary for content to be below app bar\n    justifyContent: 'flex-start'\n  }\n}));\n\nfunction ElevationScroll(props) {\n  _s();\n\n  const {\n    children,\n    window\n  } = props; // Note that you normally won't need to set the window ref as useScrollTrigger\n  // will default to window.\n  // This is only being set here because the demo is in an iframe.\n\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 0,\n    target: window ? window() : undefined\n  });\n  return /*#__PURE__*/React.cloneElement(children, {\n    elevation: trigger ? 4 : 0\n  });\n} // ElevationScroll.propTypes = {\n//   children: PropTypes.element.isRequired,\n//   *\n//    * Injected by the documentation to work in an iframe.\n//    * You won't need it on your project.\n//   window: PropTypes.func,\n// };\n\n\n_s(ElevationScroll, \"EC2GbbZl9x3XKoXLVx1H89cOBi0=\", false, function () {\n  return [useScrollTrigger];\n});\n\n_c = ElevationScroll;\nexport default function HeaderAppBar(props) {\n  _s2();\n\n  // console.log('PROPS INSIDE APPBARContainer COMP:' ,props)\n  // const [color, setColor] = React.useState('default');\n  const [open, setOpen] = useState(false);\n  const [readySwapping, setreadySwapping] = useState(false);\n  const [activeOnlyList, setList] = useState({\n    activeOnly: false\n  });\n  const classes = useStyles();\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const areWeReadyToSwap = () => {\n    setreadySwapping(true);\n  };\n\n  const appBarStyle = {\n    background: 'linear-gradient(90deg, #4598DC, #B06AB3 )'\n  }; // const handleChange = (event) => {\n  //   setColor(event.target.checked ? 'blue' : 'default');\n  // };\n\n  const handleOpen = () => {\n    console.log('Logout click', window);\n    localStorage.clear();\n    window.location.reload(); // localStorage.clear();\n  };\n\n  const infoFromChild = e => {\n    // const list = {\n    //   all : true,\n    //   active : false\n    // }\n    setList({ ...activeOnlyList,\n      [e.target.name]: e.target.checked\n    }); // console.log(e.target.checked)\n  };\n\n  console.log(props); //   const { account, pass, assetdata} = props.data\n  // const activeAssetsList = assetdata.filter( asset=> asset.status === '1')\n  // const allAssetsList = props.data\n\n  console.log('IS THE LIST ACTIVE ONLY ?', activeOnlyList);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header-appbar\",\n    children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ElevationScroll, {\n        children: /*#__PURE__*/_jsxDEV(AppBar, {\n          style: appBarStyle,\n          children: /*#__PURE__*/_jsxDEV(Toolbar, {\n            children: [readySwapping ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Enter account code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this) : /*#__PURE__*/_jsxDEV(Tooltip, {\n              title: \"Click to Switch accounts\",\n              onClick: areWeReadyToSwap,\n              children: /*#__PURE__*/_jsxDEV(Fab, {\n                color: \"primary\",\n                \"aria-label\": \"switch accounts\",\n                children: /*#__PURE__*/_jsxDEV(SwapHorizRoundedIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"thebetween\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                \"aria-label\": \"show more\",\n                \"aria-controls\": 'primary-search-account-menu-mobile',\n                \"aria-haspopup\": \"true\",\n                onClick: handleOpen,\n                color: \"inherit\",\n                children: /*#__PURE__*/_jsxDEV(MoreIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Toolbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(HeaderAppBar, \"uKEhng1gJlNFCfNISkEIqTWrfTk=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = HeaderAppBar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ElevationScroll\");\n$RefreshReg$(_c2, \"HeaderAppBar\");","map":{"version":3,"sources":["/Users/othome/Desktop/projects/zonar/zpeek/src/components/topbar/header-appbar.js"],"names":["React","useState","TestT","AppBar","Drawer","Fab","MenuIcon","List","Divider","Toolbar","useScrollTrigger","makeStyles","IconButton","CloseIcon","MoreIcon","AppContainer","Tooltip","SwapHorizRoundedIcon","drawerWidth","useStyles","theme","drawer","width","flexShrink","drawerPaper","drawerHeader","display","alignItems","justifyContent","ElevationScroll","props","children","window","trigger","disableHysteresis","threshold","target","undefined","cloneElement","elevation","HeaderAppBar","open","setOpen","readySwapping","setreadySwapping","activeOnlyList","setList","activeOnly","classes","handleDrawerOpen","handleDrawerClose","areWeReadyToSwap","appBarStyle","background","handleOpen","console","log","localStorage","clear","location","reload","infoFromChild","e","name","checked"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,qBAAP;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,oBAAP,MAAiC,qCAAjC;AAGA,MAAMC,WAAW,GAAG,GAApB;AACA,MAAMC,SAAS,GAAGR,UAAU,CAAES,KAAD,KAAY;AACvCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,KAAK,EAAEJ,WADD;AAENK,IAAAA,UAAU,EAAE;AAFN,GAD+B;AAKvCC,EAAAA,WAAW,EAAE;AACXF,IAAAA,KAAK,EAAEJ;AADI,GAL0B;AAQvCO,EAAAA,YAAY,EAAE;AACZC,IAAAA,OAAO,EAAE,MADG;AAEZC,IAAAA,UAAU,EAAE,QAFA;AAGZ;AACAC,IAAAA,cAAc,EAAE;AAJJ;AARyB,CAAZ,CAAD,CAA5B;;AAgBA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAC9B,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAuBF,KAA7B,CAD8B,CAE9B;AACA;AACA;;AACA,QAAMG,OAAO,GAAGvB,gBAAgB,CAAC;AAC/BwB,IAAAA,iBAAiB,EAAE,IADY;AAE/BC,IAAAA,SAAS,EAAE,CAFoB;AAG/BC,IAAAA,MAAM,EAAEJ,MAAM,GAAGA,MAAM,EAAT,GAAcK;AAHG,GAAD,CAAhC;AAMA,sBAAOrC,KAAK,CAACsC,YAAN,CAAmBP,QAAnB,EAA6B;AAClCQ,IAAAA,SAAS,EAAEN,OAAO,GAAG,CAAH,GAAO;AADS,GAA7B,CAAP;AAGD,C,CAED;AACA;AACA;AACA;AACA;AAEA;AACA;;;GAvBSJ,e;UAKSnB,gB;;;KALTmB,e;AAyBT,eAAe,SAASW,YAAT,CAAsBV,KAAtB,EAA6B;AAAA;;AAC1C;AACA;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBzC,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAAC0C,aAAD,EAAgBC,gBAAhB,IAAoC3C,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAAC4C,cAAD,EAAiBC,OAAjB,IAA4B7C,QAAQ,CAAC;AAAC8C,IAAAA,UAAU,EAAG;AAAd,GAAD,CAA1C;AAEA,QAAMC,OAAO,GAAG7B,SAAS,EAAzB;;AACA,QAAM8B,gBAAgB,GAAG,MAAM;AAC7BP,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFD;;AAIA,QAAMQ,iBAAiB,GAAG,MAAM;AAC9BR,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAFD;;AAGA,QAAMS,gBAAgB,GAAG,MAAK;AAC5BP,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD,GAFD;;AAKA,QAAMQ,WAAW,GAAG;AAAEC,IAAAA,UAAU,EAAE;AAAd,GAApB,CApB0C,CAqB1C;AACA;AACA;;AACA,QAAMC,UAAU,GAAG,MAAK;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BxB,MAA5B;AACAyB,IAAAA,YAAY,CAACC,KAAb;AACA1B,IAAAA,MAAM,CAAC2B,QAAP,CAAgBC,MAAhB,GAHsB,CAItB;AACD,GALD;;AAMA,QAAMC,aAAa,GAAIC,CAAD,IAAK;AACzB;AACA;AACA;AACA;AACAhB,IAAAA,OAAO,CAAC,EAAG,GAAGD,cAAN;AAAsB,OAACiB,CAAC,CAAC1B,MAAF,CAAS2B,IAAV,GAAiBD,CAAC,CAAC1B,MAAF,CAAS4B;AAAhD,KAAD,CAAP,CALyB,CAOzB;AAED,GATD;;AAUAT,EAAAA,OAAO,CAACC,GAAR,CAAY1B,KAAZ,EAxC0C,CAyC1C;AACA;AACA;;AAEAyB,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCX,cAAzC;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,2BACE,QAAC,KAAD,CAAO,QAAP;AAAA,8BACE,QAAC,eAAD;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAEO,WAAf;AAAA,iCACE,QAAC,OAAD;AAAA,uBAEET,aAAa,gBACb;AAAO,cAAA,IAAI,EAAC,MAAZ;AAAmB,cAAA,WAAW,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,oBADa,gBAIb,QAAC,OAAD;AAAS,cAAA,KAAK,EAAC,0BAAf;AAA0C,cAAA,OAAO,EAAEQ,gBAAnD;AAAA,qCACE,QAAC,GAAD;AAAK,gBAAA,KAAK,EAAC,SAAX;AAAqB,8BAAW,iBAAhC;AAAA,uCACE,QAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBANF,eAYA;AAAK,cAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,oBAZA,eAaA;AAAA,qCACE,QAAC,UAAD;AACE,8BAAW,WADb;AAEE,iCAAe,oCAFjB;AAGE,iCAAc,MAHhB;AAIE,gBAAA,OAAO,EAAEG,UAJX;AAKE,gBAAA,KAAK,EAAC,SALR;AAAA,uCAOE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eA8BE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cA9BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqCD;;IArFuBd,Y;UAONrB,S;;;MAPMqB,Y","sourcesContent":["import React, { useState } from 'react';\nimport './header-appbar.css';\nimport TestT from './test-t';\nimport AppBar from '@material-ui/core/AppBar';\nimport Drawer from '@material-ui/core/Drawer';\nimport Fab from '@material-ui/core/Fab';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport AppContainer from '../app-container/app-container';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport SwapHorizRoundedIcon from '@material-ui/icons/SwapHorizRounded';\n\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles((theme) => ({\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    // necessary for content to be below app bar\n    justifyContent: 'flex-start',\n  },\n}));\n\nfunction ElevationScroll(props) {\n  const { children, window } = props;\n  // Note that you normally won't need to set the window ref as useScrollTrigger\n  // will default to window.\n  // This is only being set here because the demo is in an iframe.\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 0,\n    target: window ? window() : undefined,\n  });\n\n  return React.cloneElement(children, {\n    elevation: trigger ? 4 : 0,\n  });\n}\n\n// ElevationScroll.propTypes = {\n//   children: PropTypes.element.isRequired,\n//   *\n//    * Injected by the documentation to work in an iframe.\n//    * You won't need it on your project.\n   \n//   window: PropTypes.func,\n// };\n\nexport default function HeaderAppBar(props) {\n  // console.log('PROPS INSIDE APPBARContainer COMP:' ,props)\n  // const [color, setColor] = React.useState('default');\n  const [open, setOpen] = useState(false);\n  const [readySwapping, setreadySwapping] = useState(false);\n  const [activeOnlyList, setList] = useState({activeOnly : false});\n\n  const classes = useStyles();\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const areWeReadyToSwap = () =>{\n    setreadySwapping(true);\n  }\n\n\n  const appBarStyle = { background: 'linear-gradient(90deg, #4598DC, #B06AB3 )'}\n  // const handleChange = (event) => {\n  //   setColor(event.target.checked ? 'blue' : 'default');\n  // };\n  const handleOpen = ()=> {\n    console.log('Logout click', window)\n    localStorage.clear();\n    window.location.reload()\n    // localStorage.clear();\n  }\n  const infoFromChild = (e)=>{\n    // const list = {\n    //   all : true,\n    //   active : false\n    // }\n    setList({  ...activeOnlyList, [e.target.name]: e.target.checked })\n\n    // console.log(e.target.checked)\n\n  }\n  console.log(props)\n  //   const { account, pass, assetdata} = props.data\n  // const activeAssetsList = assetdata.filter( asset=> asset.status === '1')\n  // const allAssetsList = props.data\n\n  console.log('IS THE LIST ACTIVE ONLY ?', activeOnlyList)\n\n\n  return (\n    <div className='header-appbar'>\n      <React.Fragment>\n        <ElevationScroll>\n          <AppBar style={appBarStyle}>\n            <Toolbar>\n            {\n              readySwapping ?\n              <input type='text' placeholder='Enter account code'/>\n\n              :\n              <Tooltip title='Click to Switch accounts' onClick={areWeReadyToSwap}>\n                <Fab color='primary' aria-label='switch accounts'>\n                  <SwapHorizRoundedIcon/>\n                </Fab>\n              </Tooltip>\n            }\n            <div className='thebetween'/>\n            <div >\n              <IconButton\n                aria-label=\"show more\"\n                aria-controls={'primary-search-account-menu-mobile'}\n                aria-haspopup=\"true\"\n                onClick={handleOpen}\n                color=\"inherit\"\n              >\n                <MoreIcon />\n              </IconButton>\n            </div>\n            </Toolbar>\n          </AppBar>\n        </ElevationScroll>\n        <Toolbar />\n      </React.Fragment>\n    </div>\n\n  );\n}\n"]},"metadata":{},"sourceType":"module"}