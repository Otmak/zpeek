{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/othome/Desktop/projects/zonar/zpeek/src/components/topbar/header-appbar.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './header-appbar.css';\nimport TestT from './test-t';\nimport AppBar from '@material-ui/core/AppBar';\nimport Menu from '@material-ui/core/Menu';\nimport Drawer from '@material-ui/core/Drawer';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport AppContainer from '../app-container/app-container';\nconst drawerWidth = 240;\nconst useStyles = makeStyles(theme => ({\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    // necessary for content to be below app bar\n    justifyContent: 'flex-start'\n  }\n}));\n\nfunction ElevationScroll(props) {\n  _s();\n\n  const {\n    children,\n    window\n  } = props; // Note that you normally won't need to set the window ref as useScrollTrigger\n  // will default to window.\n  // This is only being set here because the demo is in an iframe.\n\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 0,\n    target: window ? window() : undefined\n  });\n  return /*#__PURE__*/React.cloneElement(children, {\n    elevation: trigger ? 4 : 0\n  });\n} // ElevationScroll.propTypes = {\n//   children: PropTypes.element.isRequired,\n//   *\n//    * Injected by the documentation to work in an iframe.\n//    * You won't need it on your project.\n//   window: PropTypes.func,\n// };\n\n\n_s(ElevationScroll, \"EC2GbbZl9x3XKoXLVx1H89cOBi0=\", false, function () {\n  return [useScrollTrigger];\n});\n\n_c = ElevationScroll;\nexport default function ControlCenter(props) {\n  _s2();\n\n  // console.log('PROPS INSIDE APPBARContainer COMP:' ,props)\n  // const [color, setColor] = React.useState('default');\n  const [open, setOpen] = useState(false);\n  const [activeOnlyList, setList] = useState({\n    activeOnly: true\n  });\n  const classes = useStyles();\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const appBarStyle = {\n    background: 'linear-gradient(90deg, #4598DC, #B06AB3 )'\n  }; // const handleChange = (event) => {\n  //   setColor(event.target.checked ? 'blue' : 'default');\n  // };\n\n  const handleOpen = () => {\n    console.log('Clicked');\n  };\n\n  const infoFromChild = e => {\n    // const list = {\n    //   all : true,\n    //   active : false\n    // }\n    setList({ ...activeOnlyList,\n      [e.target.name]: e.target.checked\n    }); // console.log(e.target.checked)\n  }; // console.log(props)\n\n\n  const activeAssetsList = props.data.filter(asset => asset.status === '1');\n  const allAssetsList = props.data;\n  console.log('IS THE LIST ACTIVE ONLY ?', activeOnlyList);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-appbar\",\n      children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(ElevationScroll, {\n          children: /*#__PURE__*/_jsxDEV(AppBar, {\n            style: appBarStyle,\n            children: /*#__PURE__*/_jsxDEV(Toolbar, {\n              children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                \"aria-label\": \"show more\",\n                \"aria-controls\": 'primary-search-account-menu-mobile',\n                \"aria-haspopup\": \"true\",\n                color: \"inherit\",\n                children: /*#__PURE__*/_jsxDEV(MoreIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"thebetween\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  edge: \"start\",\n                  color: \"inherit\",\n                  \"aria-label\": \"menu\",\n                  onClick: handleDrawerOpen,\n                  children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 127,\n                    columnNumber: 20\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n          className: classes.drawer,\n          variant: \"persistent\",\n          anchor: \"right\",\n          open: open,\n          classes: {\n            paper: classes.drawerPaper\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.drawerHeader,\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: handleDrawerClose,\n              children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            children: /*#__PURE__*/_jsxDEV(TestT, {\n              data: infoFromChild\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Toolbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppContainer, {\n      assets: activeOnlyList.activeOnly ? activeAssetsList : allAssetsList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(ControlCenter, \"w/U0e8iiJptwWytR/TvVDBNyEPw=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = ControlCenter;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ElevationScroll\");\n$RefreshReg$(_c2, \"ControlCenter\");","map":{"version":3,"sources":["/Users/othome/Desktop/projects/zonar/zpeek/src/components/topbar/header-appbar.js"],"names":["React","useState","TestT","AppBar","Menu","Drawer","MenuItem","MenuIcon","List","Typography","Divider","Toolbar","useScrollTrigger","makeStyles","IconButton","CloseIcon","MoreIcon","AppContainer","drawerWidth","useStyles","theme","drawer","width","flexShrink","drawerPaper","drawerHeader","display","alignItems","justifyContent","ElevationScroll","props","children","window","trigger","disableHysteresis","threshold","target","undefined","cloneElement","elevation","ControlCenter","open","setOpen","activeOnlyList","setList","activeOnly","classes","handleDrawerOpen","handleDrawerClose","appBarStyle","background","handleOpen","console","log","infoFromChild","e","name","checked","activeAssetsList","data","filter","asset","status","allAssetsList","paper"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './header-appbar.css';\nimport TestT from './test-t';\nimport AppBar from '@material-ui/core/AppBar';\nimport Menu from '@material-ui/core/Menu';\nimport Drawer from '@material-ui/core/Drawer';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport AppContainer from '../app-container/app-container';\n\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles((theme) => ({\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    // necessary for content to be below app bar\n    justifyContent: 'flex-start',\n  },\n}));\n\nfunction ElevationScroll(props) {\n  const { children, window } = props;\n  // Note that you normally won't need to set the window ref as useScrollTrigger\n  // will default to window.\n  // This is only being set here because the demo is in an iframe.\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 0,\n    target: window ? window() : undefined,\n  });\n\n  return React.cloneElement(children, {\n    elevation: trigger ? 4 : 0,\n  });\n}\n\n// ElevationScroll.propTypes = {\n//   children: PropTypes.element.isRequired,\n//   *\n//    * Injected by the documentation to work in an iframe.\n//    * You won't need it on your project.\n   \n//   window: PropTypes.func,\n// };\n\nexport default function ControlCenter(props) {\n  // console.log('PROPS INSIDE APPBARContainer COMP:' ,props)\n  // const [color, setColor] = React.useState('default');\n  const [open, setOpen] = useState(false);\n  const [activeOnlyList, setList] = useState({activeOnly : true});\n\n  const classes = useStyles();\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n\n  const appBarStyle = { background: 'linear-gradient(90deg, #4598DC, #B06AB3 )'}\n  // const handleChange = (event) => {\n  //   setColor(event.target.checked ? 'blue' : 'default');\n  // };\n  const handleOpen = ()=> {\n    console.log('Clicked')\n  }\n  const infoFromChild = (e)=>{\n    // const list = {\n    //   all : true,\n    //   active : false\n    // }\n    setList({  ...activeOnlyList, [e.target.name]: e.target.checked })\n\n    // console.log(e.target.checked)\n\n  }\n  // console.log(props)\n  const activeAssetsList = props.data.filter( asset=> asset.status === '1')\n  const allAssetsList = props.data\n\n  console.log('IS THE LIST ACTIVE ONLY ?', activeOnlyList)\n\n\n  return (\n    <div>\n      <div className='header-appbar'>\n        <React.Fragment>\n          <ElevationScroll>\n            <AppBar style={appBarStyle}>\n              <Toolbar>       \n                <IconButton\n                  aria-label=\"show more\"\n                  aria-controls={'primary-search-account-menu-mobile'}\n                  aria-haspopup=\"true\"\n              \n                  color=\"inherit\"\n                >\n                    <MoreIcon />\n                </IconButton>\n              <div className='thebetween'/>\n              <div >\n                <IconButton \n                    edge=\"start\"  \n                    color=\"inherit\" \n                    aria-label=\"menu\"\n                    onClick={handleDrawerOpen}\n                >\n                   <MenuIcon />\n                </IconButton>\n              </div>\n              </Toolbar>\n            </AppBar>\n          </ElevationScroll>\n              <Drawer\n                  className={classes.drawer}\n                  variant=\"persistent\"\n                  anchor=\"right\"\n                  open={open}\n                  classes={{\n                    paper: classes.drawerPaper,\n                  }}\n              >\n              <div className={classes.drawerHeader}>\n                <IconButton onClick={handleDrawerClose}>\n                  <CloseIcon/>\n                </IconButton>\n              </div>\n              <Divider />\n              <List>\n                <TestT data={infoFromChild}/>\n              </List>\n            </Drawer>\n          <Toolbar />\n        </React.Fragment>\n      </div>\n        <AppContainer assets={ activeOnlyList.activeOnly ? activeAssetsList : allAssetsList } />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}