{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/othome/Desktop/projects/zonar/zpeek/src/App.js\";\nimport React, { Component } from 'react';\nimport AppContainer from './components/app-container/app-container';\nimport ElevateAppBar from './components/app-container/app-container';\nimport SignInFirst from './components/signin/signin';\nimport './App.css'; // add Tooltips all across app\n//https://material-ui.com/components/snackbars/ use these bars to show a console log activity\n// https://material-ui.com/components/dialogs/ this is for swapping account code and Full screen  gendata or path\\\n//https://material-ui.com/components/lists/ use this for layout of CONTROL MENU\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this._isMounted = false;\n    this.state = {\n      assets: [],\n      searchFeild: '',\n      viewBothActiveAndInactive: false,\n      weGot200: false // accountCode : '',\n      // password : ''\n\n    };\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  getGettingStartedData(e) {\n    // console.log(`${e.target.name}, : ${e.target.value}`)\n    // const {accountCode, password} this.state\n    const handle = e.target.name;\n    const handleValue = e.target.value;\n    console.log(handle, ':', handleValue);\n    this.setState({\n      [handle]: handleValue\n    }); // console.log(e.target.name, )\n  }\n\n  async letsGetStarted(e) {\n    e.preventDefault();\n\n    const validate = v => v === '' || v === undefined ? false : true; // if (v === '' || v === undefined) {\n    //   // console.log('Your params are weak bruh')\n    //   return false\n    // }else{\n    //   return true\n    // }\n\n\n    const {\n      accountCode,\n      passWord\n    } = this.state; // console.log(validate(accountCode) === validate(passWord), validate(accountCode), validate(passWord))\n\n    if (validate(accountCode) && validate(passWord)) {\n      // console.log(`Account : ${accountCode}  password ${passWord}`)\n      const bodyData = {\n        'account': accountCode,\n        'hashed': passWord\n      };\n      const makeRequest = await fetch('/assets', {\n        method: 'POST',\n        body: JSON.stringify(bodyData),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const getInitialData = await makeRequest.json();\n      console.log(getInitialData);\n\n      if (getInitialData.status === 200) {\n        //this._isMounted\n        this.setState({\n          weGot200: true\n        });\n      }\n\n      console.log('Making initial call with ....', accountCode, passWord);\n    } else {\n      console.log('the form is empty...'); // console.log(`Account : ${accountCode}  password ${passWord}`)\n    } //function to change view from active only to BothActive and inactive\n\n  }\n\n  render() {\n    const {\n      assets,\n      accountCode,\n      passWord,\n      weGot200\n    } = this.state;\n    const assetListLenghth = assets.length;\n    const activeAssetsList = assets.filter(asset => asset.status == '1');\n    console.log(`Is it 200? ${weGot200}`);\n\n    if (weGot200) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: /*#__PURE__*/_jsxDEV(AppContainer, {\n          data: {\n            'account': accountCode,\n            'pass': passWord\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(SignInFirst, {\n        getFormData: e => this.getGettingStartedData(e),\n        letsGetStarted: e => this.letsGetStarted(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/othome/Desktop/projects/zonar/zpeek/src/App.js"],"names":["React","Component","AppContainer","ElevateAppBar","SignInFirst","App","constructor","_isMounted","state","assets","searchFeild","viewBothActiveAndInactive","weGot200","componentDidMount","componentWillUnmount","getGettingStartedData","e","handle","target","name","handleValue","value","console","log","setState","letsGetStarted","preventDefault","validate","v","undefined","accountCode","passWord","bodyData","makeRequest","fetch","method","body","JSON","stringify","headers","getInitialData","json","status","render","assetListLenghth","length","activeAssetsList","filter","asset"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport AppContainer from './components/app-container/app-container';\nimport ElevateAppBar from './components/app-container/app-container';\nimport SignInFirst from './components/signin/signin'\nimport './App.css';\n\n// add Tooltips all across app\n//https://material-ui.com/components/snackbars/ use these bars to show a console log activity\n// https://material-ui.com/components/dialogs/ this is for swapping account code and Full screen  gendata or path\\\n//https://material-ui.com/components/lists/ use this for layout of CONTROL MENU\nexport default class App extends Component {\n  _isMounted = false;\n  constructor(){\n  super()\n  this.state = {\n    assets: [],\n    searchFeild: '',\n    viewBothActiveAndInactive : false,\n    weGot200 : false\n    // accountCode : '',\n    // password : ''\n   }\n  }\n\n  componentDidMount() {\n     this._isMounted = true;\n  }\n\n\n    componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n\n  getGettingStartedData(e){\n    // console.log(`${e.target.name}, : ${e.target.value}`)\n    // const {accountCode, password} this.state\n    const handle = e.target.name\n    const handleValue = e.target.value\n    console.log( handle,':',handleValue)\n    this.setState({ [handle] : handleValue })\n    // console.log(e.target.name, )\n\n  }\n\n\n  async letsGetStarted(e){\n    e.preventDefault()\n    const validate = (v) =>  v === '' || v === undefined ? false : true \n\n      // if (v === '' || v === undefined) {\n      //   // console.log('Your params are weak bruh')\n      //   return false\n      // }else{\n      //   return true\n\n      // }\n      \n    \n    const {accountCode, passWord} = this.state\n    // console.log(validate(accountCode) === validate(passWord), validate(accountCode), validate(passWord))\n    if ( validate(accountCode) && validate(passWord)) {\n      // console.log(`Account : ${accountCode}  password ${passWord}`)\n      const bodyData = {\n        'account' : accountCode,\n        'hashed' : passWord\n      }\n\n      const makeRequest = await fetch('/assets', {\n          method: 'POST',\n          body: JSON.stringify(bodyData),\n          headers: {'Content-Type': 'application/json'}\n      })\n\n      const getInitialData = await makeRequest.json()\n      console.log(getInitialData)\n      if ( getInitialData.status === 200 ) {//this._isMounted\n        this.setState({ weGot200 : true})\n      }\n\n      console.log('Making initial call with ....', accountCode, passWord)\n\n    }else {\n      console.log('the form is empty...')\n      // console.log(`Account : ${accountCode}  password ${passWord}`)\n    }\n    //function to change view from active only to BothActive and inactive\n  }\n\n  \n  render() {\n    const {assets, accountCode, passWord, weGot200 } = this.state\n    const assetListLenghth = assets.length\n    const activeAssetsList = assets.filter( asset=> asset.status == '1')\n    console.log(`Is it 200? ${weGot200}`)\n\n\n    if ( weGot200 ) {\n      return(\n          <div className='App'>\n            <AppContainer data={{'account': accountCode, 'pass':passWord }}/>\n          </div>\n      )} \n\n    return (\n      <div className='App'>\n        <SignInFirst getFormData={(e)=>this.getGettingStartedData(e)} letsGetStarted={(e)=>this.letsGetStarted(e)}/>\n      </div>\n  )}\n}\n"]},"metadata":{},"sourceType":"module"}