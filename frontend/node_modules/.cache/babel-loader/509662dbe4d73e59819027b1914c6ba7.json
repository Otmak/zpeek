{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/othome/Desktop/projects/zonar/zpeek/src/components/app-container/app-container.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Switch from '@material-ui/core/Switch';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport Container from '@material-ui/core/Container';\nimport TabAndPanel from '../tabs/tab';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport TabComponent from '../tabs/tab';\nimport HeaderAppBar from '../header/header-appbar';\n\nfunction ElevationScroll(props) {\n  _s();\n\n  const {\n    children,\n    window\n  } = props; // Note that you normally won't need to set the window ref as useScrollTrigger\n  // will default to window.\n  // This is only being set here because the demo is in an iframe.\n\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 0,\n    target: window ? window() : undefined\n  });\n  return /*#__PURE__*/React.cloneElement(children, {\n    elevation: trigger ? 4 : 0\n  });\n}\n\n_s(ElevationScroll, \"EC2GbbZl9x3XKoXLVx1H89cOBi0=\", false, function () {\n  return [useScrollTrigger];\n});\n\n_c = ElevationScroll;\nElevationScroll.propTypes = {\n  children: PropTypes.element.isRequired,\n\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  window: PropTypes.func\n};\nexport default function AppContainer(props) {\n  _s2();\n\n  // console.log('PROPS INSIDE APPBARContainer COMP:' ,props)\n  const [color, setColor] = React.useState('default');\n  const appBarStyle = {\n    background: 'linear-gradient(90deg, #4598DC, #B06AB3 )'\n  };\n\n  const handleChange = event => {\n    setColor(event.target.checked ? 'blue' : 'default');\n  };\n\n  const theme = React.useMemo(() => {\n    if (color === 'blue') {\n      return createMuiTheme({\n        palette: {\n          secondary: {\n            main: 'blue',\n            contrastText: '#fff'\n          }\n        }\n      });\n    }\n\n    return createMuiTheme();\n  }, [color]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HeaderAppBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(TabComponent, {\n        data: props.assets,\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(AppContainer, \"GrbQUXMGIdBkI8mAdeeBRnNAOM4=\");\n\n_c2 = AppContainer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ElevationScroll\");\n$RefreshReg$(_c2, \"AppContainer\");","map":{"version":3,"sources":["/Users/othome/Desktop/projects/zonar/zpeek/src/components/app-container/app-container.js"],"names":["React","PropTypes","AppBar","Toolbar","Typography","Switch","useScrollTrigger","Container","TabAndPanel","FormControlLabel","createMuiTheme","ThemeProvider","TabComponent","HeaderAppBar","ElevationScroll","props","children","window","trigger","disableHysteresis","threshold","target","undefined","cloneElement","elevation","propTypes","element","isRequired","func","AppContainer","color","setColor","useState","appBarStyle","background","handleChange","event","checked","theme","useMemo","palette","secondary","main","contrastText","assets"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,SAASC,cAAT,EAAyBC,aAAzB,QAA8C,0BAA9C;AACA,OAAOC,YAAP,MAAyB,aAAzB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAC9B,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAuBF,KAA7B,CAD8B,CAE9B;AACA;AACA;;AACA,QAAMG,OAAO,GAAGZ,gBAAgB,CAAC;AAC/Ba,IAAAA,iBAAiB,EAAE,IADY;AAE/BC,IAAAA,SAAS,EAAE,CAFoB;AAG/BC,IAAAA,MAAM,EAAEJ,MAAM,GAAGA,MAAM,EAAT,GAAcK;AAHG,GAAD,CAAhC;AAMA,sBAAOtB,KAAK,CAACuB,YAAN,CAAmBP,QAAnB,EAA6B;AAClCQ,IAAAA,SAAS,EAAEN,OAAO,GAAG,CAAH,GAAO;AADS,GAA7B,CAAP;AAGD;;GAdQJ,e;UAKSR,gB;;;KALTQ,e;AAgBTA,eAAe,CAACW,SAAhB,GAA4B;AAC1BT,EAAAA,QAAQ,EAAEf,SAAS,CAACyB,OAAV,CAAkBC,UADF;;AAE1B;AACF;AACA;AACA;AACEV,EAAAA,MAAM,EAAEhB,SAAS,CAAC2B;AANQ,CAA5B;AASA,eAAe,SAASC,YAAT,CAAsBd,KAAtB,EAA6B;AAAA;;AAC1C;AACA,QAAM,CAACe,KAAD,EAAQC,QAAR,IAAoB/B,KAAK,CAACgC,QAAN,CAAe,SAAf,CAA1B;AACA,QAAMC,WAAW,GAAG;AAAEC,IAAAA,UAAU,EAAE;AAAd,GAApB;;AACA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9BL,IAAAA,QAAQ,CAACK,KAAK,CAACf,MAAN,CAAagB,OAAb,GAAuB,MAAvB,GAAgC,SAAjC,CAAR;AACD,GAFD;;AAGA,QAAMC,KAAK,GAAGtC,KAAK,CAACuC,OAAN,CAAc,MAAM;AAChC,QAAIT,KAAK,KAAK,MAAd,EAAsB;AACpB,aAAOpB,cAAc,CAAC;AACpB8B,QAAAA,OAAO,EAAE;AACPC,UAAAA,SAAS,EAAE;AACTC,YAAAA,IAAI,EAAE,MADG;AAETC,YAAAA,YAAY,EAAE;AAFL;AADJ;AADW,OAAD,CAArB;AAQD;;AACD,WAAOjC,cAAc,EAArB;AACD,GAZa,EAYX,CAACoB,KAAD,CAZW,CAAd;AAaA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAA,6BACE,QAAC,YAAD;AAAc,QAAA,IAAI,EAAEf,KAAK,CAAC6B,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;IA5BuBf,Y;;MAAAA,Y","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Switch from '@material-ui/core/Switch';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport Container from '@material-ui/core/Container';\nimport TabAndPanel from '../tabs/tab';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport TabComponent from '../tabs/tab';\nimport HeaderAppBar from '../header/header-appbar';\n\nfunction ElevationScroll(props) {\n  const { children, window } = props;\n  // Note that you normally won't need to set the window ref as useScrollTrigger\n  // will default to window.\n  // This is only being set here because the demo is in an iframe.\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 0,\n    target: window ? window() : undefined,\n  });\n\n  return React.cloneElement(children, {\n    elevation: trigger ? 4 : 0,\n  });\n}\n\nElevationScroll.propTypes = {\n  children: PropTypes.element.isRequired,\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  window: PropTypes.func,\n};\n\nexport default function AppContainer(props) {\n  // console.log('PROPS INSIDE APPBARContainer COMP:' ,props)\n  const [color, setColor] = React.useState('default');\n  const appBarStyle = { background: 'linear-gradient(90deg, #4598DC, #B06AB3 )'}\n  const handleChange = (event) => {\n    setColor(event.target.checked ? 'blue' : 'default');\n  };\n  const theme = React.useMemo(() => {\n    if (color === 'blue') {\n      return createMuiTheme({\n        palette: {\n          secondary: {\n            main: 'blue',\n            contrastText: '#fff',\n          },\n        },\n      });\n    }\n    return createMuiTheme();\n  }, [color]);\n  return (\n    <React.Fragment>\n      <HeaderAppBar/>\n      <Container>\n        <TabComponent data={props.assets}> </TabComponent>\n      </Container>\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}