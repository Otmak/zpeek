{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/othome/Desktop/projects/zonar/zpeek/src/components/asset-content/gendata/gendata.js\";\nimport React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nclass Gendata extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      accordionActive: {}\n    };\n  }\n\n  getDateTime(e) {\n    let dateTimeValue = e.target.value;\n    let dateTimeId = e.target.id; // console.log(this)\n\n    let epTime = new Date(dateTimeValue);\n    let selectedEpochTime = epTime.getTime() / 1000.0;\n    this.setState({\n      [dateTimeId]: selectedEpochTime\n    });\n    console.log(dateTimeValue, dateTimeId, 'FROM PATH....', this);\n  }\n\n  async testMethod(e) {\n    e.preventDefault();\n    const makeRequest = await fetch('/gendata', {\n      method: 'POST',\n      body: 'JSON.stringify(bodyData)',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const getPathData = await makeRequest.json();\n    console.log(getPathData.gendata[0]);\n    this.setState({\n      data: getPathData.gendata[0]\n    });\n  }\n\n  async fetchGendata() {// \n  }\n\n  handleExpand(panel) {\n    const {\n      accordionActive\n    } = this.state;\n\n    if (accordionActive[panel]) {// console.log('Panel active setting to inactive')\n      // this.setState({accordionActive[panel] = false })\n    } else {\n      accordionActive[panel] = false;\n      console.log(accordionActive); // console.log('panel not active, setting to active....')\n      // this.setState({accordionActive[panel] = true })\n    }\n\n    console.log(panel);\n  }\n\n  render() {\n    console.log(this);\n    const {\n      data\n    } = this.state; // const loded =  Object.entries(data).map(([key, b]) => {\n    //   // console.log(b[key])\n    //   console.log(`${key} =====> ${b.labels}`)\n    // })\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => this.testMethod(e),\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"startDate\",\n          variant: \"outlined\",\n          label: \"Start\",\n          type: \"datetime-local\",\n          onChange: e => this.getDateTime(e),\n          InputLabelProps: {\n            shrink: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"endDate\",\n          variant: \"outlined\",\n          label: \"End\",\n          type: \"datetime-local\",\n          onChange: e => this.getDateTime(e),\n          InputLabelProps: {\n            shrink: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \" Get Gendata\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gendata-a-container\",\n        children: Object.entries(data).map(([i, b]) => /*#__PURE__*/_jsxDEV(Accordion, {\n          TransitionProps: {\n            unmountOnExit: true\n          },\n          onChange: () => this.handleExpand(i),\n          children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n            expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 31\n            }, this),\n            \"aria-controls\": \"panel1a-content\",\n            id: \"panel1a-header\",\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: [\" \", b.labels]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 19\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex, sit amet blandit leo lobortis eget.\"\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 19\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Gendata;","map":{"version":3,"sources":["/Users/othome/Desktop/projects/zonar/zpeek/src/components/asset-content/gendata/gendata.js"],"names":["React","Component","TextField","Accordion","AccordionSummary","AccordionDetails","Typography","ExpandMoreIcon","Gendata","constructor","props","state","data","accordionActive","getDateTime","e","dateTimeValue","target","value","dateTimeId","id","epTime","Date","selectedEpochTime","getTime","setState","console","log","testMethod","preventDefault","makeRequest","fetch","method","body","headers","getPathData","json","gendata","fetchGendata","handleExpand","panel","render","shrink","Object","entries","map","i","b","unmountOnExit","labels"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\n\n\nclass Gendata extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      data : [],\n      accordionActive: {}\n    }\n  }\n\n  getDateTime(e){\n    let dateTimeValue = e.target.value\n    let dateTimeId  = e.target.id\n    // console.log(this)\n\n    let epTime = new Date(dateTimeValue)\n    let selectedEpochTime = epTime.getTime()/1000.0\n\n    this.setState({[dateTimeId]: selectedEpochTime})\n    console.log(dateTimeValue, dateTimeId, 'FROM PATH....', this)\n  }\n\n  async testMethod(e){\n    e.preventDefault()\n    const makeRequest = await fetch('/gendata', {\n          method: 'POST',\n          body: 'JSON.stringify(bodyData)',\n          headers: {'Content-Type': 'application/json'}\n      })\n    const getPathData = await makeRequest.json()\n    console.log(getPathData.gendata[0])\n    this.setState({data : getPathData.gendata[0]})\n  }\n\n  async fetchGendata(){\n    // \n  }\n  handleExpand(panel){\n    const {accordionActive} = this.state\n\n    if ( accordionActive[panel] ) {\n      // console.log('Panel active setting to inactive')\n      // this.setState({accordionActive[panel] = false })\n    }else {\n      accordionActive[panel] = false\n      console.log(accordionActive)\n      // console.log('panel not active, setting to active....')\n      // this.setState({accordionActive[panel] = true })\n    }\n    console.log(panel)\n  }\n\n  render(){\n    console.log(this)\n\n    const { data } = this.state\n\n\n    // const loded =  Object.entries(data).map(([key, b]) => {\n    //   // console.log(b[key])\n    //   console.log(`${key} =====> ${b.labels}`)\n    // })\n\n    return (\n      <div>\n        <form onSubmit={(e)=> this.testMethod(e)}>\n          <TextField\n            id=\"startDate\"\n            variant='outlined'\n            label=\"Start\"\n            type=\"datetime-local\"\n            onChange={ (e) => this.getDateTime(e)}\n            InputLabelProps={{ shrink: true,}}\n          />\n          <TextField\n            id=\"endDate\"\n            variant='outlined'\n            label=\"End\"\n            type=\"datetime-local\"\n            onChange={ (e) => this.getDateTime(e)}\n            InputLabelProps={{ shrink: true,}}\n           />\n           <button> Get Gendata</button>\n        </form>\n        <div className='gendata-a-container'>\n          {\n            Object.entries(data).map(([i, b]) => (\n              <Accordion TransitionProps={{ unmountOnExit: true }}  key={i} onChange={ () => this.handleExpand(i) } >\n                <AccordionSummary\n                   key={i}\n                  expandIcon={<ExpandMoreIcon />}\n                  aria-controls=\"panel1a-content\"\n                  id=\"panel1a-header\"\n                >\n                  <Typography  key={i} > {b.labels}</Typography>\n                  \n                </AccordionSummary>\n                <AccordionDetails  key={i}>\n                  <Typography  key={i}>\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex,\n                    sit amet blandit leo lobortis eget.\n                  </Typography>\n                </AccordionDetails>\n              </Accordion>\n            \n            ))\n         }\n        </div>\n      </div>\n    );}\n}\n\n\nexport default Gendata;"]},"metadata":{},"sourceType":"module"}