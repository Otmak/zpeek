{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/othome/Desktop/projects/zonar/zpeek/src/components/asset-content/path.js\";\nimport React, { Component } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nclass Path extends Component {\n  constructor(props) {\n    super(props);\n    this.fetchPathData = this.fetchPathData.bind(this);\n    this.state = {\n      pathdata: this.props,\n      comingsoon: '',\n      data: []\n    };\n  }\n\n  componentDidMount() {}\n\n  async fetchPathData(params) {\n    let start = 1603971032;\n    let end = 1608230858;\n    let dbId = params;\n    let bodyData = {\n      'params': {\n        'stime': start,\n        'etime': end,\n        'dbId': dbId\n      }\n    };\n    const makeRequest = await fetch('/path', {\n      method: 'POST',\n      body: JSON.stringify(bodyData),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const getPathData = await makeRequest.json();\n\n    if (makeRequest.status === 200 && getPathData.pathresponse[0].id == dbId) {\n      // console.log(this)\n      this.setState({\n        data: getPathData.pathresponse[0].events\n      }); // console.log(this)\n    }\n\n    console.log(makeRequest.status, getPathData.pathresponse);\n    return 'Done';\n  }\n\n  render() {\n    const {\n      data,\n      comingsoon\n    } = this.state.data;\n\n    function createData(name, calories, fat, carbs, protein) {\n      return {\n        name,\n        calories,\n        fat,\n        carbs,\n        protein\n      };\n    }\n\n    console.log('LOGGING data.. :', data);\n    const rows = [createData('Frozen yoghurt', 159, 6.0, 24, 4.0), createData('Ice cream sandwich', 237, 9.0, 37, 4.3), createData('Eclair', 262, 16.0, 24, 6.0), createData('Cupcake', 305, 3.7, 67, 4.3), createData('Gingerbread', 356, 16.0, 49, 3.9)];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.fetchPathData(data),\n        children: \" get path\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          className: \"classes.table\",\n          \"aria-label\": \"simple table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Source\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 24\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Date Time\\xA0(PST)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 24\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: \"Speed\\xA0(MPH)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 24\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: \"Heading\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 24\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: \"Log Reason\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 24\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: \"Distance\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 24\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: \"Lat\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 24\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: \"Long\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 24\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 22\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: data.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: row.source\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 26\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: row.time\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 26\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                component: \"th\",\n                scope: \"row\",\n                children: row.speed\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 26\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: row.heading\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 26\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: row.reason\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 26\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: row.distance_traveled\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 26\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: row.lat\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 26\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: row.lng\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 26\n              }, this)]\n            }, row.time, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 24\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 20\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default Path;","map":{"version":3,"sources":["/Users/othome/Desktop/projects/zonar/zpeek/src/components/asset-content/path.js"],"names":["React","Component","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Path","constructor","props","fetchPathData","bind","state","pathdata","comingsoon","data","componentDidMount","params","start","end","dbId","bodyData","makeRequest","fetch","method","body","JSON","stringify","headers","getPathData","json","status","pathresponse","id","setState","events","console","log","render","createData","name","calories","fat","carbs","protein","rows","map","row","source","time","speed","heading","reason","distance_traveled","lat","lng"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\n\n\nclass Path extends Component {\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.fetchPathData = this.fetchPathData.bind(this)\n\t\tthis.state = {\n\t\t\tpathdata :this.props,\n\t\t\tcomingsoon : '',\n\t\t\tdata : []\n\t\t}\n\t}\n\n\tcomponentDidMount(){\n\t}\n\n\tasync fetchPathData (params)  {\n\t\tlet start = 1603971032\n\t\tlet end = 1608230858\n\t\tlet dbId = params\n\t\tlet bodyData = {'params': { \n\t\t\t\t\t\t'stime': start,\n\t\t\t\t\t\t'etime': end,\n\t\t\t\t\t\t'dbId' : dbId}\n\t\t\t\t\t}\n\t\tconst makeRequest = await fetch('/path', {\n\t        method: 'POST',\n\t        body: JSON.stringify(bodyData),\n\t        headers: {'Content-Type': 'application/json'}\n\t    })\n\t\tconst getPathData = await makeRequest.json()\n\t\tif (makeRequest.status === 200 && getPathData.pathresponse[0].id == dbId) {\n\t\t\t// console.log(this)\n\t\t\tthis.setState({data : getPathData.pathresponse[0].events})\n\t\t\t// console.log(this)\n\t\t}\n\t\tconsole.log(makeRequest.status, getPathData.pathresponse)\n\t\treturn 'Done'\n\t}\n\trender(){\n\t\tconst {data, comingsoon} = this.state.data\n\t\tfunction createData(name, calories, fat, carbs, protein) {\n\t\t  return { name, calories, fat, carbs, protein };\n\t\t}\n\t\tconsole.log('LOGGING data.. :',data)\n\t\tconst rows = [\n\t\t  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n\t\t  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n\t\t  createData('Eclair', 262, 16.0, 24, 6.0),\n\t\t  createData('Cupcake', 305, 3.7, 67, 4.3),\n\t\t  createData('Gingerbread', 356, 16.0, 49, 3.9),\n\t\t];\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<button onClick={() => this.fetchPathData(data)}> get path</button>\n\t\t\t\t   { \n\t\t\t\t   \t\t<TableContainer component={Paper}>\n   \t   \t\t\t\t      <Table className=\"classes.table\" aria-label=\"simple table\">\n   \t   \t\t\t\t        <TableHead>\n   \t   \t\t\t\t          <TableRow>\n   \t   \t\t\t\t            <TableCell>Source</TableCell>\n   \t   \t\t\t\t            <TableCell>Date Time&nbsp;(PST)</TableCell>\n   \t   \t\t\t\t            <TableCell align=\"right\">Speed&nbsp;(MPH)</TableCell>\n   \t   \t\t\t\t            <TableCell align=\"right\">Heading</TableCell>\n   \t   \t\t\t\t            <TableCell align=\"right\">Log Reason</TableCell>\n   \t   \t\t\t\t            <TableCell align=\"right\">Distance</TableCell>\n   \t   \t\t\t\t            <TableCell align=\"right\">Lat</TableCell>\n   \t   \t\t\t\t            <TableCell align=\"right\">Long</TableCell>\n   \t   \t\t\t\t          </TableRow>\n   \t   \t\t\t\t        </TableHead>\n   \t   \n   \t   \t\t\t\t        <TableBody>\n   \t   \t\t\t\t          {data.map((row) => (\n   \t   \t\t\t\t            <TableRow key={row.time}>\n   \t   \t\t\t\t              <TableCell align=\"right\">{row.source}</TableCell>\n   \t   \t\t\t\t              <TableCell align=\"right\">{row.time}</TableCell>\n   \t   \t\t\t\t              <TableCell component=\"th\" scope=\"row\">\n   \t   \t\t\t\t                {row.speed}\n   \t   \t\t\t\t              </TableCell>\n   \t   \t\t\t\t              \n   \t   \t\t\t\t              <TableCell align=\"right\">{row.heading}</TableCell>\n   \t   \t\t\t\t              <TableCell align=\"right\">{row.reason}</TableCell>\n   \t   \t\t\t\t              <TableCell align=\"right\">{row.distance_traveled}</TableCell>\n   \t   \t\t\t\t              <TableCell align=\"right\">{row.lat}</TableCell>\n   \t   \t\t\t\t              <TableCell align=\"right\">{row.lng}</TableCell>\n   \t   \t\t\t\t            </TableRow>\n   \t   \t\t\t\t          ))}\n   \t   \t\t\t\t        </TableBody>\n   \t   \t\t\t\t      </Table>\n   \t   \t\t\t\t    </TableContainer>\n\t\t\t\t   \t}\n\t\t\t</div>\n\t\t\t)\n\t}\n }\n\nexport default Path;"]},"metadata":{},"sourceType":"module"}