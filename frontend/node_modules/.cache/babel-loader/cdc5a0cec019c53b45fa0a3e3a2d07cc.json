{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/othome/Desktop/projects/zonar/zpeek/src/components/asset-content/mani/location/location.js\";\nimport React, { Component } from 'react';\nimport Chip from '@material-ui/core/Chip';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport './location.css';\nexport default class Location extends Component {\n  constructor(props) {\n    super(props);\n    this._isMounted = false;\n    this.state = {\n      locationDetails: [],\n      data: this.props.data,\n      isComponentMounted: true,\n      isLocationLoading: true\n    };\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.fetchManiData();\n    this.setState({\n      isComponentMounted: true\n    });\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n    console.log('Location COMPONENT UNMOUNTED');\n    this.setState({\n      isComponentMounted: false\n    });\n  }\n\n  async fetchManiData() {\n    console.log('fetching location...');\n    this.setState({\n      locationDetails: []\n    });\n    const {\n      data: {\n        id = null,\n        gpsid = null,\n        account,\n        hashed\n      },\n      isComponentMounted\n    } = this.state;\n    console.log('State Cleared!...........', isComponentMounted);\n\n    if (!isComponentMounted || gpsid === null) {\n      // console.log(` Location :- Either Component unmounted or gps null mouted?==>${isComponentMounted} gps==> ${gpsid}`)\n      this.setState({\n        isLocationLoading: false\n      });\n      return;\n    } else {\n      console.log('L :- setting state of Loading to TRUE ');\n      this.setState({\n        isLocationLoading: true\n      });\n      let bodyData = {\n        'params': {\n          'id': id,\n          'gpsid': gpsid,\n          'account': account,\n          'hashed': hashed\n        }\n      };\n      const makeRequest = await fetch('/location', {\n        method: 'POST',\n        body: JSON.stringify(bodyData),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }); // console.log('End',makeRequest)\n\n      const getLocationData = await makeRequest.json();\n      console.log('Done making request', getLocationData, isComponentMounted);\n\n      if (makeRequest.status === 200 && this._isMounted) {\n        if (getLocationData.error) {\n          console.log('Error in server ', getLocationData.error);\n          this.setState({\n            isLocationLoading: false\n          });\n        } else {\n          if (getLocationData && isComponentMounted && this._isMounted) {\n            console.log('Location on the way!');\n            this.setState({\n              locationDetails: getLocationData.locationresponse,\n              isLocationLoading: false\n            }); // console.log(getLocationData)\n          } else {\n            // this.setState({pathexists : false})\n            console.log('Error AFTER 200 status on fetch');\n          }\n        }\n      } else {\n        // console.log(`Error AFTER 200 status on fetch or Component is unmounted... COMP mounted?==>${isComponentMounted}`)\n        this.setSate({\n          gettingMani: false\n        });\n        return;\n      }\n    }\n\n    return 'Done';\n  }\n\n  render() {\n    const {\n      locationDetails,\n      isLocationLoading\n    } = this.state;\n\n    const functionn = () => this.fetchManiData();\n\n    console.log('LOCATION:', this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: true,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              gutterBottom: true,\n              variant: \"subtitle1\",\n              children: `Last time`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              gutterBottom: true,\n              variant: \"h6\",\n              children: `${locationDetails.time}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          className: \"gps-grid-container\",\n          container: true,\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: true,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"textSecondary\",\n              variant: \"body2\",\n              children: 'i.name'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 10\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"textSecondary\",\n              variant: \"body2\",\n              children: \"g\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 10\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 8\n          }, this)]\n        }, 1, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 7\n        }, this), locationDetails.power === 'on' ? /*#__PURE__*/_jsxDEV(Chip, {\n          className: \"chip-on\",\n          label: \"On\",\n          onClick: functionn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 41\n        }, this) : /*#__PURE__*/_jsxDEV(Chip, {\n          className: \"chip-off\",\n          label: \"Off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 103\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 4\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/othome/Desktop/projects/zonar/zpeek/src/components/asset-content/mani/location/location.js"],"names":["React","Component","Chip","Grid","Typography","Location","constructor","props","_isMounted","state","locationDetails","data","isComponentMounted","isLocationLoading","componentDidMount","fetchManiData","setState","componentWillUnmount","console","log","id","gpsid","account","hashed","bodyData","makeRequest","fetch","method","body","JSON","stringify","headers","getLocationData","json","status","error","locationresponse","setSate","gettingMani","render","functionn","time","power"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAO,gBAAP;AAGA,eAAe,MAAMC,QAAN,SAAuBJ,SAAvB,CAAgC;AAE9CK,EAAAA,WAAW,CAAEC,KAAF,EAAQ;AAClB,UAAMA,KAAN;AADkB,SADnBC,UACmB,GADN,KACM;AAElB,SAAKC,KAAL,GAAa;AACZC,MAAAA,eAAe,EAAG,EADN;AAEZC,MAAAA,IAAI,EAAG,KAAKJ,KAAL,CAAWI,IAFN;AAGZC,MAAAA,kBAAkB,EAAG,IAHT;AAIZC,MAAAA,iBAAiB,EAAG;AAJR,KAAb;AAMA;;AAEDC,EAAAA,iBAAiB,GAAE;AAClB,SAAKN,UAAL,GAAkB,IAAlB;AACA,SAAKO,aAAL;AACA,SAAKC,QAAL,CAAc;AAACJ,MAAAA,kBAAkB,EAAG;AAAtB,KAAd;AACA;;AAGDK,EAAAA,oBAAoB,GAAE;AACrB,SAAKT,UAAL,GAAkB,KAAlB;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACA,SAAKH,QAAL,CAAc;AAACJ,MAAAA,kBAAkB,EAAG;AAAtB,KAAd;AACG;;AAEF,QAAMG,aAAN,GAAsB;AAEvBG,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACA,SAAKH,QAAL,CAAc;AAACN,MAAAA,eAAe,EAAG;AAAnB,KAAd;AACA,UAAM;AAAEC,MAAAA,IAAI,EAAG;AAAES,QAAAA,EAAE,GAAC,IAAL;AAAWC,QAAAA,KAAK,GAAC,IAAjB;AAAuBC,QAAAA,OAAvB;AAAgCC,QAAAA;AAAhC,OAAT;AAAmDX,MAAAA;AAAnD,QAAyE,KAAKH,KAApF;AAGAS,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAwCP,kBAAxC;;AAGA,QAAI,CAACA,kBAAD,IAAuBS,KAAK,KAAK,IAArC,EAA0C;AACzC;AACA,WAAKL,QAAL,CAAc;AAACH,QAAAA,iBAAiB,EAAE;AAApB,OAAd;AACA;AACA,KAJD,MAIK;AACJK,MAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ;AACA,WAAKH,QAAL,CAAc;AAACH,QAAAA,iBAAiB,EAAG;AAArB,OAAd;AACA,UAAIW,QAAQ,GAAG;AACf,kBAAU;AACT,gBAAMJ,EADG;AAET,mBAASC,KAFA;AAGT,qBAAUC,OAHD;AAIT,oBAASC;AAJA;AADK,OAAf;AAOA,YAAME,WAAW,GAAG,MAAMC,KAAK,CAAC,WAAD,EAAc;AACtCC,QAAAA,MAAM,EAAE,MAD8B;AAEtCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,QAAf,CAFgC;AAGtCO,QAAAA,OAAO,EAAE;AAAC,0BAAgB;AAAjB;AAH6B,OAAd,CAA/B,CAVI,CAeD;;AACH,YAAMC,eAAe,GAAG,MAAMP,WAAW,CAACQ,IAAZ,EAA9B;AACAf,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAkCa,eAAlC,EAAmDpB,kBAAnD;;AAGA,UAAIa,WAAW,CAACS,MAAZ,KAAuB,GAAvB,IAA8B,KAAK1B,UAAvC,EAAoD;AACnD,YAAIwB,eAAe,CAACG,KAApB,EAA2B;AAC1BjB,UAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAA+Ba,eAAe,CAACG,KAA/C;AACA,eAAKnB,QAAL,CAAc;AAACH,YAAAA,iBAAiB,EAAG;AAArB,WAAd;AACA,SAHD,MAGK;AACJ,cAAImB,eAAe,IAAIpB,kBAAnB,IAAyC,KAAKJ,UAAlD,EAA8D;AAC7DU,YAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACA,iBAAKH,QAAL,CAAc;AAACN,cAAAA,eAAe,EAAGsB,eAAe,CAACI,gBAAnC;AAAqDvB,cAAAA,iBAAiB,EAAG;AAAzE,aAAd,EAF6D,CAG7D;AACA,WAJD,MAIK;AACJ;AACAK,YAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACA;AACD;AACD,OAdD,MAcK;AACJ;AACA,aAAKkB,OAAL,CAAa;AAACC,UAAAA,WAAW,EAAE;AAAd,SAAb;AACA;AACA;AACD;;AAED,WAAO,MAAP;AACA;;AAEDC,EAAAA,MAAM,GAAE;AAEP,UAAM;AAAC7B,MAAAA,eAAD;AAAkBG,MAAAA;AAAlB,QAAuC,KAAKJ,KAAlD;;AACA,UAAM+B,SAAS,GAAG,MAAK,KAAKzB,aAAL,EAAvB;;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwB,IAAxB;AACA,wBACC;AAAA,6BAGE;AAAA,gCACC,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,UAAU,EAAC,QAA3B;AAAA,kCACQ,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,MAAb;AAAA,mCACE,QAAC,UAAD;AAAY,cAAA,YAAY,MAAxB;AAAyB,cAAA,OAAO,EAAC,WAAjC;AAAA,wBACG;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADR,eAMQ,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAA,mCACE,QAAC,UAAD;AAAY,cAAA,YAAY,MAAxB;AAAyB,cAAA,OAAO,EAAC,IAAjC;AAAA,wBACI,GAAET,eAAe,CAAC+B,IAAK;AAD3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBANR;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAcC,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,oBAAhB;AAA6C,UAAA,SAAS,MAAtD;AAAuD,UAAA,UAAU,EAAC,QAAlE;AAAA,kCACC,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,MAAb;AAAA,mCACE,QAAC,UAAD;AAAY,cAAA,KAAK,EAAC,eAAlB;AAAkC,cAAA,OAAO,EAAC,OAA1C;AAAA,wBACE;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADD,eAMC,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAA,mCACE,QAAC,UAAD;AAAY,cAAA,KAAK,EAAC,eAAlB;AAAkC,cAAA,OAAO,EAAC,OAA1C;AAAA,wBACE;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAND;AAAA,WAA0C,CAA1C;AAAA;AAAA;AAAA;AAAA,gBAdD,EA0BE/B,eAAe,CAACgC,KAAhB,KAA0B,IAA1B,gBAAiC,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,SAAhB;AAA0B,UAAA,KAAK,EAAC,IAAhC;AAAqC,UAAA,OAAO,EAAEF;AAA9C;AAAA;AAAA;AAAA;AAAA,gBAAjC,gBAA+F,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,UAAhB;AAA2B,UAAA,KAAK,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,gBA1BjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,YADD;AAkCE;;AA1H2C","sourcesContent":["import React, {Component} from 'react';\nimport Chip from '@material-ui/core/Chip';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport './location.css';\n\n\nexport default class Location extends Component{\n\t_isMounted = false;\n\tconstructor (props){\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tlocationDetails : [],\n\t\t\tdata : this.props.data,\n\t\t\tisComponentMounted : true,\n\t\t\tisLocationLoading : true\n\t\t}\n\t}\n\n\tcomponentDidMount(){\n\t\tthis._isMounted = true;\n\t\tthis.fetchManiData()\n\t\tthis.setState({isComponentMounted : true})\n\t}\n\n\n\tcomponentWillUnmount(){\n\t\tthis._isMounted = false;\n\t\tconsole.log('Location COMPONENT UNMOUNTED')\n\t\tthis.setState({isComponentMounted : false})\n    }\n\n  \tasync fetchManiData() {\n\n\t\tconsole.log('fetching location...')\n\t\tthis.setState({locationDetails : []})\n\t\tconst { data : { id=null, gpsid=null, account, hashed }, isComponentMounted} = this.state\n\n\n\t\tconsole.log('State Cleared!...........',isComponentMounted)\n\t\t\n\n\t\tif (!isComponentMounted || gpsid === null){\n\t\t\t// console.log(` Location :- Either Component unmounted or gps null mouted?==>${isComponentMounted} gps==> ${gpsid}`)\n\t\t\tthis.setState({isLocationLoading: false})\n\t\t\treturn;\n\t\t}else{\n\t\t\tconsole.log('L :- setting state of Loading to TRUE ')\n\t\t\tthis.setState({isLocationLoading : true})\n\t\t\tlet bodyData = {\n\t\t\t'params': {\n\t\t\t\t'id': id,\n\t\t\t\t'gpsid': gpsid,\n\t\t\t\t'account':account,\n\t\t\t\t'hashed':hashed\n\t\t\t\t}}\n\t\t\tconst makeRequest = await fetch('/location', {\n\t\t        method: 'POST',\n\t\t        body: JSON.stringify(bodyData),\n\t\t        headers: {'Content-Type': 'application/json'}\n\t\t    })\n\t\t    // console.log('End',makeRequest)\n\t\t\tconst getLocationData = await makeRequest.json()\n\t\t\tconsole.log('Done making request',getLocationData, isComponentMounted)\n\n\n\t\t\tif (makeRequest.status === 200 && this._isMounted ) {\n\t\t\t\tif (getLocationData.error) {\n\t\t\t\t\tconsole.log('Error in server ',getLocationData.error )\n\t\t\t\t\tthis.setState({isLocationLoading : false})\n\t\t\t\t}else{\n\t\t\t\t\tif (getLocationData && isComponentMounted && this._isMounted) {\n\t\t\t\t\t\tconsole.log('Location on the way!')\n\t\t\t\t\t\tthis.setState({locationDetails : getLocationData.locationresponse, isLocationLoading : false})\n\t\t\t\t\t\t// console.log(getLocationData)\n\t\t\t\t\t}else{\n\t\t\t\t\t\t// this.setState({pathexists : false})\n\t\t\t\t\t\tconsole.log('Error AFTER 200 status on fetch')\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\t// console.log(`Error AFTER 200 status on fetch or Component is unmounted... COMP mounted?==>${isComponentMounted}`)\n\t\t\t\tthis.setSate({gettingMani: false})\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\treturn 'Done'\n\t}\n\n\trender(){\n\n\t\tconst {locationDetails, isLocationLoading} = this.state\n\t\tconst functionn = ()=> this.fetchManiData()\n\t\tconsole.log('LOCATION:',this)\n\t\treturn(\n\t\t\t<div>\n\t\n\t\t\t\t{\n\t\t\t\t\t<div> \n\t\t\t\t\t\t<Grid container alignItems=\"center\">\n\t\t\t\t          <Grid item xs>\n\t\t\t\t            <Typography gutterBottom variant=\"subtitle1\">\n\t\t\t\t             {`Last time`}\n\t\t\t\t            </Typography>\n\t\t\t\t          </Grid>\n\t\t\t\t          <Grid item>\n\t\t\t\t            <Typography gutterBottom variant=\"h6\">\n\t\t\t\t              {`${locationDetails.time}`}\n\t\t\t\t            </Typography>\n\t\t\t\t          </Grid>\n\t\t\t\t        </Grid>\n\n\t\t\t\t\t\t<Grid className='gps-grid-container' key={1} container alignItems=\"center\">\n\t\t\t\t\t\t\t<Grid item xs>\n\t\t\t\t\t\t\t  <Typography color=\"textSecondary\" variant=\"body2\">\n\t\t\t\t\t\t\t  \t{'i.name'}\n\t\t\t\t\t\t\t  </Typography>\n\t\t\t\t\t\t\t</Grid>\t\t\t          \n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t  <Typography color=\"textSecondary\" variant=\"body2\">\n\t\t\t\t\t\t\t  \t{\"g\"}\n\t\t\t\t\t\t\t  </Typography>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t{locationDetails.power === 'on' ? <Chip className='chip-on' label='On' onClick={functionn} /> : <Chip className='chip-off' label='Off'/> }\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t</div>\n\t\t)}\n}"]},"metadata":{},"sourceType":"module"}